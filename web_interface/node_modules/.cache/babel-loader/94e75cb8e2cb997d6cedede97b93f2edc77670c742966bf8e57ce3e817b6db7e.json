{"ast":null,"code":"import _objectSpread from\"/Users/cooperstevens/Documents/CursorWorkspace copy/Spinecat/web_interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Toaster}from'react-hot-toast';import{motion,AnimatePresence}from'framer-motion';import{Settings}from'lucide-react';import{apiService}from'./services/api';import ImageUploader from'./components/ImageUploader';import SpineVisualizer from'./components/SpineVisualizer';import BookListManager from'./components/BookListManager';import ProcessingStatus from'./components/ProcessingStatus';import FinalizePanel from'./components/FinalizePanel';import ManualBookSearch from'./components/ManualBookSearch';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[processingState,setProcessingState]=useState({status:'idle',progress:0,message:'Ready to process images'});const[processingResult,setProcessingResult]=useState(null);const[selectedSpineId,setSelectedSpineId]=useState(null);const[isFinalized,setIsFinalized]=useState(false);// Function to scroll to book when spine is clicked\nconst handleSpineSelected=spineId=>{console.log('🎯 Spine clicked:',spineId);setSelectedSpineId(spineId);// Find the corresponding book and scroll to it\nif(processingResult){const book=processingResult.book_matches.find(b=>b.spine_region_id===spineId);console.log('🔍 Found book for spine:',book);if(book){// Small delay to ensure DOM is updated\nsetTimeout(()=>{const bookElement=document.querySelector(\"[data-book-id=\\\"\".concat(book.id,\"\\\"]\"));console.log('🔍 Looking for book element:',book.id,bookElement);if(bookElement){console.log('✅ Scrolling to book:',book.title);bookElement.scrollIntoView({behavior:'smooth',block:'center',inline:'nearest'});// Add highlight effect\nbookElement.classList.add('ring-2','ring-blue-400','ring-opacity-75');setTimeout(()=>{bookElement.classList.remove('ring-2','ring-blue-400','ring-opacity-75');},2000);}else{console.warn('❌ Book element not found for ID:',book.id);}},100);}else{console.warn('❌ No book found for spine ID:',spineId);}}};const[currentTaskId,setCurrentTaskId]=useState(null);const[isManualSearchOpen,setIsManualSearchOpen]=useState(false);const[editingBookId,setEditingBookId]=useState(null);// Progress polling for current task\nuseEffect(()=>{let intervalId;if(processingState.status==='processing'&&currentTaskId){console.log('🔄 App: Starting progress polling for task:',currentTaskId);intervalId=setInterval(async()=>{try{const data=await apiService.getProgress(currentTaskId);console.log('📡 App: Polled progress:',data);setProcessingState(prev=>_objectSpread(_objectSpread({},prev),{},{status:data.status==='completed'?'completed':'processing',progress:data.progress,message:data.message}));// If task is completed, fetch the result\nif(data.status==='completed'){try{var _result$book_matches,_result$spine_regions,_result$ocr_failures;const result=await apiService.getResult(currentTaskId);console.log('✅ App: Got result:',result);console.log('🔍 App: Result structure:',{total_spines:result.total_spines,successful_matches:result.successful_matches,book_matches_length:(_result$book_matches=result.book_matches)===null||_result$book_matches===void 0?void 0:_result$book_matches.length,spine_regions_length:(_result$spine_regions=result.spine_regions)===null||_result$spine_regions===void 0?void 0:_result$spine_regions.length,ocr_failures_length:(_result$ocr_failures=result.ocr_failures)===null||_result$ocr_failures===void 0?void 0:_result$ocr_failures.length});if(result.book_matches&&result.book_matches.length>0){console.log('🔍 App: First book match:',result.book_matches[0]);}setProcessingResult(result);setProcessingState(prev=>_objectSpread(_objectSpread({},prev),{},{status:'completed',progress:100,message:\"Processed \".concat(result.total_spines,\" spines with \").concat(result.successful_matches,\" successful matches\")}));}catch(error){console.error('❌ App: Failed to get result:',error);setProcessingState(prev=>_objectSpread(_objectSpread({},prev),{},{status:'error',message:'Failed to get processing result'}));}}}catch(error){console.error('❌ App: Failed to poll progress:',error);}},200);// Poll every 200ms\n}return()=>{if(intervalId){console.log('🔄 App: Stopping progress polling...');clearInterval(intervalId);}};},[processingState.status,currentTaskId]);const handleImageProcessed=result=>{setProcessingResult(result);setProcessingState({status:'completed',progress:100,message:\"Processed \".concat(result.total_spines,\" spines with \").concat(result.successful_matches,\" successful matches\")});};const handleImageUpload=async file=>{try{setProcessingState({status:'processing',progress:0,message:'Starting image processing...'});// Start the processing task\nconst{task_id}=await apiService.startProcess(file);setCurrentTaskId(task_id);console.log('🚀 App: Started task:',task_id);}catch(error){console.error('❌ App: Failed to start processing:',error);setProcessingState({status:'error',progress:0,message:\"Failed to start processing: \".concat(error instanceof Error?error.message:'Unknown error')});}};const handleReset=()=>{setProcessingState({status:'idle',progress:0,message:'Ready to process images'});setProcessingResult(null);setSelectedSpineId(null);setIsFinalized(false);setCurrentTaskId(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white\",children:[/*#__PURE__*/_jsx(Toaster,{position:\"top-right\"}),/*#__PURE__*/_jsx(\"header\",{className:\"bg-slate-800/50 backdrop-blur-sm border-b border-slate-700/50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center h-16\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-semibold text-slate-200\",children:\"Book Spine Analyzer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-4\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>window.open('http://127.0.0.1:8002/docs','_blank'),className:\"flex items-center space-x-2 px-3 py-2 text-sm text-slate-300 hover:text-white hover:bg-slate-700/50 rounded-md transition-colors\",children:[/*#__PURE__*/_jsx(Settings,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"API Docs\"})]})})]})})}),/*#__PURE__*/_jsx(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:/*#__PURE__*/_jsxs(AnimatePresence,{mode:\"wait\",children:[processingState.status==='idle'&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.3},children:/*#__PURE__*/_jsx(ImageUploader,{onImageUpload:handleImageUpload})},\"upload\"),processingState.status==='processing'&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.3},children:/*#__PURE__*/_jsx(ProcessingStatus,{state:processingState})},\"processing\"),processingState.status==='completed'&&processingResult&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.3},children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-slate-100 mb-2\",children:\"Analysis Complete!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-slate-400\",children:[\"Found \",processingResult.total_spines,\" spines with \",processingResult.successful_matches,\" successful matches\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,className:\"mt-4 px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\",children:\"Process Another Image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-slate-200\",children:\"Detected Spines\"}),/*#__PURE__*/_jsx(SpineVisualizer,{imageUrl:\"\".concat(apiService.getBaseUrl()).concat(processingResult.image_url),spineRegions:processingResult.spine_regions,bookMatches:processingResult.book_matches,selectedSpineId:selectedSpineId,onSpineSelected:handleSpineSelected,isFinalized:isFinalized,onSpineRegionsUpdated:updatedRegions=>{setProcessingResult(prev=>prev?_objectSpread(_objectSpread({},prev),{},{spine_regions:updatedRegions}):null);},onManualSpineAdded:newSpine=>{setProcessingResult(prev=>prev?_objectSpread(_objectSpread({},prev),{},{spine_regions:[...prev.spine_regions,newSpine],// Update the existing book's spine_region_id to point to the new spine\nbook_matches:prev.book_matches.map(book=>book.id===editingBookId?_objectSpread(_objectSpread({},book),{},{spine_region_id:newSpine.id}):book)}):null);// Stop editing mode\nsetEditingBookId(null);},onStopEditing:()=>setEditingBookId(null),editingBookId:editingBookId})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-slate-200\",children:\"Identified Books\"}),/*#__PURE__*/_jsx(BookListManager,{bookMatches:processingResult.book_matches,ocrFailures:processingResult.ocr_failures,selectedSpineId:selectedSpineId,onSpineSelected:handleSpineSelected,onBookListUpdated:updatedMatches=>{setProcessingResult(prev=>prev?_objectSpread(_objectSpread({},prev),{},{book_matches:updatedMatches,// Filter out spine regions that no longer have corresponding books\nspine_regions:prev.spine_regions.filter(spine=>updatedMatches.some(book=>book.spine_region_id===spine.id))}):null);},onStartEditing:bookId=>{console.log('🔄 Starting edit for book:',bookId);console.log('🔄 Current editingBookId before set:',editingBookId);if(editingBookId===bookId){console.log('🔄 Book is already in editing mode, toggling off');setEditingBookId(null);}else{console.log('🔄 Setting editingBookId to:',bookId);setEditingBookId(bookId);}},onStopEditing:()=>setEditingBookId(null)})]})]}),/*#__PURE__*/_jsx(FinalizePanel,{processingResult:processingResult,onUnfinalize:()=>setIsFinalized(false)})]})},\"results\"),processingState.status==='error'&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.3},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-red-400 mb-4\",children:\"Processing Failed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 mb-6\",children:processingState.message}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,className:\"px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\",children:\"Try Again\"})]})},\"error\")]})}),/*#__PURE__*/_jsx(ManualBookSearch,{isOpen:isManualSearchOpen,onClose:()=>setIsManualSearchOpen(false),onBookSelected:book=>{console.log('Selected book from manual search:',book);// You can add logic here to handle the selected book\n// For example, add it to a list or replace a failed match\n}})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Toaster","motion","AnimatePresence","Settings","apiService","ImageUploader","SpineVisualizer","BookListManager","ProcessingStatus","FinalizePanel","ManualBookSearch","jsx","_jsx","jsxs","_jsxs","App","processingState","setProcessingState","status","progress","message","processingResult","setProcessingResult","selectedSpineId","setSelectedSpineId","isFinalized","setIsFinalized","handleSpineSelected","spineId","console","log","book","book_matches","find","b","spine_region_id","setTimeout","bookElement","document","querySelector","concat","id","title","scrollIntoView","behavior","block","inline","classList","add","remove","warn","currentTaskId","setCurrentTaskId","isManualSearchOpen","setIsManualSearchOpen","editingBookId","setEditingBookId","intervalId","setInterval","data","getProgress","prev","_objectSpread","_result$book_matches","_result$spine_regions","_result$ocr_failures","result","getResult","total_spines","successful_matches","book_matches_length","length","spine_regions_length","spine_regions","ocr_failures_length","ocr_failures","error","clearInterval","handleImageProcessed","handleImageUpload","file","task_id","startProcess","Error","handleReset","className","children","position","onClick","window","open","mode","div","initial","opacity","y","animate","exit","transition","duration","onImageUpload","state","imageUrl","getBaseUrl","image_url","spineRegions","bookMatches","onSpineSelected","onSpineRegionsUpdated","updatedRegions","onManualSpineAdded","newSpine","map","onStopEditing","ocrFailures","onBookListUpdated","updatedMatches","filter","spine","some","onStartEditing","bookId","onUnfinalize","isOpen","onClose","onBookSelected"],"sources":["/Users/cooperstevens/Documents/CursorWorkspace copy/Spinecat/web_interface/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Settings, Download } from 'lucide-react';\n\nimport { ProcessingState, ProcessingResult } from './types';\nimport { apiService } from './services/api';\nimport ImageUploader from './components/ImageUploader';\nimport SpineVisualizer from './components/SpineVisualizer';\nimport BookListManager from './components/BookListManager';\nimport ProcessingStatus from './components/ProcessingStatus';\nimport FinalizePanel from './components/FinalizePanel';\nimport ManualBookSearch from './components/ManualBookSearch';\n\nconst App: React.FC = () => {\n  const [processingState, setProcessingState] = useState<ProcessingState>({\n    status: 'idle',\n    progress: 0,\n    message: 'Ready to process images'\n  });\n  \n  const [processingResult, setProcessingResult] = useState<ProcessingResult | null>(null);\n  const [selectedSpineId, setSelectedSpineId] = useState<string | null>(null);\n  const [isFinalized, setIsFinalized] = useState(false);\n  \n  // Function to scroll to book when spine is clicked\n  const handleSpineSelected = (spineId: string) => {\n    console.log('🎯 Spine clicked:', spineId);\n    setSelectedSpineId(spineId);\n    \n    // Find the corresponding book and scroll to it\n    if (processingResult) {\n      const book = processingResult.book_matches.find(b => b.spine_region_id === spineId);\n      console.log('🔍 Found book for spine:', book);\n      if (book) {\n        // Small delay to ensure DOM is updated\n        setTimeout(() => {\n          const bookElement = document.querySelector(`[data-book-id=\"${book.id}\"]`);\n          console.log('🔍 Looking for book element:', book.id, bookElement);\n          if (bookElement) {\n            console.log('✅ Scrolling to book:', book.title);\n            bookElement.scrollIntoView({ \n              behavior: 'smooth', \n              block: 'center',\n              inline: 'nearest'\n            });\n            \n            // Add highlight effect\n            bookElement.classList.add('ring-2', 'ring-blue-400', 'ring-opacity-75');\n            setTimeout(() => {\n              bookElement.classList.remove('ring-2', 'ring-blue-400', 'ring-opacity-75');\n            }, 2000);\n          } else {\n            console.warn('❌ Book element not found for ID:', book.id);\n          }\n        }, 100);\n      } else {\n        console.warn('❌ No book found for spine ID:', spineId);\n      }\n    }\n  };\n  const [currentTaskId, setCurrentTaskId] = useState<string | null>(null);\n  const [isManualSearchOpen, setIsManualSearchOpen] = useState(false);\n  const [editingBookId, setEditingBookId] = useState<string | null>(null);\n  \n  // Progress polling for current task\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n    \n    if (processingState.status === 'processing' && currentTaskId) {\n      console.log('🔄 App: Starting progress polling for task:', currentTaskId);\n      intervalId = setInterval(async () => {\n        try {\n          const data = await apiService.getProgress(currentTaskId);\n          console.log('📡 App: Polled progress:', data);\n          \n          setProcessingState(prev => ({\n            ...prev,\n            status: data.status === 'completed' ? 'completed' : 'processing',\n            progress: data.progress,\n            message: data.message\n          }));\n          \n          // If task is completed, fetch the result\n          if (data.status === 'completed') {\n            try {\n              const result = await apiService.getResult(currentTaskId);\n              console.log('✅ App: Got result:', result);\n              console.log('🔍 App: Result structure:', {\n                total_spines: result.total_spines,\n                successful_matches: result.successful_matches,\n                book_matches_length: result.book_matches?.length,\n                spine_regions_length: result.spine_regions?.length,\n                ocr_failures_length: result.ocr_failures?.length\n              });\n              if (result.book_matches && result.book_matches.length > 0) {\n                console.log('🔍 App: First book match:', result.book_matches[0]);\n              }\n              setProcessingResult(result);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'completed',\n                progress: 100,\n                message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n              }));\n            } catch (error) {\n              console.error('❌ App: Failed to get result:', error);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'error',\n                message: 'Failed to get processing result'\n              }));\n            }\n          }\n          \n        } catch (error) {\n          console.error('❌ App: Failed to poll progress:', error);\n        }\n      }, 200); // Poll every 200ms\n    }\n\n    return () => {\n      if (intervalId) {\n        console.log('🔄 App: Stopping progress polling...');\n        clearInterval(intervalId);\n      }\n    };\n  }, [processingState.status, currentTaskId]);\n\n  const handleImageProcessed = (result: ProcessingResult) => {\n    setProcessingResult(result);\n    setProcessingState({\n      status: 'completed',\n      progress: 100,\n      message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n    });\n  };\n\n  const handleImageUpload = async (file: File) => {\n    try {\n      setProcessingState({\n        status: 'processing',\n        progress: 0,\n        message: 'Starting image processing...'\n      });\n\n      // Start the processing task\n      const { task_id } = await apiService.startProcess(file);\n      setCurrentTaskId(task_id);\n      console.log('🚀 App: Started task:', task_id);\n\n    } catch (error) {\n      console.error('❌ App: Failed to start processing:', error);\n      setProcessingState({\n        status: 'error',\n        progress: 0,\n        message: `Failed to start processing: ${error instanceof Error ? error.message : 'Unknown error'}`\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setProcessingState({\n      status: 'idle',\n      progress: 0,\n      message: 'Ready to process images'\n    });\n    setProcessingResult(null);\n    setSelectedSpineId(null);\n    setIsFinalized(false);\n    setCurrentTaskId(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white\">\n      <Toaster position=\"top-right\" />\n      \n      {/* Header */}\n      <header className=\"bg-slate-800/50 backdrop-blur-sm border-b border-slate-700/50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <h1 className=\"text-xl font-semibold text-slate-200\">\n              Book Spine Analyzer\n            </h1>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => window.open('http://127.0.0.1:8002/docs', '_blank')}\n                className=\"flex items-center space-x-2 px-3 py-2 text-sm text-slate-300 hover:text-white hover:bg-slate-700/50 rounded-md transition-colors\"\n              >\n                <Settings className=\"w-4 h-4\" />\n                <span>API Docs</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <AnimatePresence mode=\"wait\">\n          {processingState.status === 'idle' && (\n            <motion.div\n              key=\"upload\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <ImageUploader onImageUpload={handleImageUpload} />\n            </motion.div>\n          )}\n\n          {processingState.status === 'processing' && (\n            <motion.div\n              key=\"processing\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <ProcessingStatus state={processingState} />\n            </motion.div>\n          )}\n\n          {processingState.status === 'completed' && processingResult && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-8\">\n                {/* Results Header */}\n                <div className=\"text-center\">\n                  <h2 className=\"text-3xl font-bold text-slate-100 mb-2\">\n                    Analysis Complete!\n                  </h2>\n                  <p className=\"text-slate-400\">\n                    Found {processingResult.total_spines} spines with {processingResult.successful_matches} successful matches\n                  </p>\n                  <button\n                    onClick={handleReset}\n                    className=\"mt-4 px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\"\n                  >\n                    Process Another Image\n                  </button>\n                </div>\n\n                {/* Main Results Grid */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {/* Image with Spine Overlays */}\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-slate-200\">Detected Spines</h3>\n                    <SpineVisualizer\n                      imageUrl={`${apiService.getBaseUrl()}${processingResult.image_url}`}\n                      spineRegions={processingResult.spine_regions}\n                      bookMatches={processingResult.book_matches}\n                      selectedSpineId={selectedSpineId}\n                      onSpineSelected={handleSpineSelected}\n                      isFinalized={isFinalized}\n                      onSpineRegionsUpdated={(updatedRegions) => {\n                        setProcessingResult(prev => prev ? {\n                          ...prev,\n                          spine_regions: updatedRegions\n                        } : null);\n                      }}\n                      onManualSpineAdded={(newSpine) => {\n                        setProcessingResult(prev => prev ? {\n                          ...prev,\n                          spine_regions: [...prev.spine_regions, newSpine],\n                          // Update the existing book's spine_region_id to point to the new spine\n                          book_matches: prev.book_matches.map(book => \n                            book.id === editingBookId \n                              ? { ...book, spine_region_id: newSpine.id }\n                              : book\n                          )\n                        } : null);\n                        // Stop editing mode\n                        setEditingBookId(null);\n                      }}\n                      onStopEditing={() => setEditingBookId(null)}\n                      editingBookId={editingBookId}\n                    />\n                  </div>\n\n                  {/* Book Matches and Management */}\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-slate-200\">Identified Books</h3>\n                    <BookListManager\n                      bookMatches={processingResult.book_matches}\n                      ocrFailures={processingResult.ocr_failures}\n                      selectedSpineId={selectedSpineId}\n                      onSpineSelected={handleSpineSelected}\n                      onBookListUpdated={(updatedMatches) => {\n                        setProcessingResult(prev => prev ? {\n                          ...prev,\n                          book_matches: updatedMatches,\n                          // Filter out spine regions that no longer have corresponding books\n                          spine_regions: prev.spine_regions.filter(spine => \n                            updatedMatches.some(book => book.spine_region_id === spine.id)\n                          )\n                        } : null);\n                      }}\n                      onStartEditing={(bookId) => {\n                        console.log('🔄 Starting edit for book:', bookId);\n                        console.log('🔄 Current editingBookId before set:', editingBookId);\n                        if (editingBookId === bookId) {\n                          console.log('🔄 Book is already in editing mode, toggling off');\n                          setEditingBookId(null);\n                        } else {\n                          console.log('🔄 Setting editingBookId to:', bookId);\n                          setEditingBookId(bookId);\n                        }\n                      }}\n                      onStopEditing={() => setEditingBookId(null)}\n                    />\n                  </div>\n                </div>\n\n                {/* Finalize Panel */}\n                <FinalizePanel\n                  processingResult={processingResult}\n                  onUnfinalize={() => setIsFinalized(false)}\n                />\n              </div>\n            </motion.div>\n          )}\n\n          {processingState.status === 'error' && (\n            <motion.div\n              key=\"error\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold text-red-400 mb-4\">\n                  Processing Failed\n                </h2>\n                <p className=\"text-slate-300 mb-6\">\n                  {processingState.message}\n                </p>\n                <button\n                  onClick={handleReset}\n                  className=\"px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\"\n                >\n                  Try Again\n                </button>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </main>\n\n      {/* Manual Book Search Modal */}\n      <ManualBookSearch\n        isOpen={isManualSearchOpen}\n        onClose={() => setIsManualSearchOpen(false)}\n        onBookSelected={(book) => {\n          console.log('Selected book from manual search:', book);\n          // You can add logic here to handle the selected book\n          // For example, add it to a list or replace a failed match\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,iBAAiB,CACzC,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CACvD,OAASC,QAAQ,KAAkB,cAAc,CAGjD,OAASC,UAAU,KAAQ,gBAAgB,CAC3C,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGnB,QAAQ,CAAkB,CACtEoB,MAAM,CAAE,MAAM,CACdC,QAAQ,CAAE,CAAC,CACXC,OAAO,CAAE,yBACX,CAAC,CAAC,CAEF,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGxB,QAAQ,CAA0B,IAAI,CAAC,CACvF,KAAM,CAACyB,eAAe,CAAEC,kBAAkB,CAAC,CAAG1B,QAAQ,CAAgB,IAAI,CAAC,CAC3E,KAAM,CAAC2B,WAAW,CAAEC,cAAc,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAErD;AACA,KAAM,CAAA6B,mBAAmB,CAAIC,OAAe,EAAK,CAC/CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEF,OAAO,CAAC,CACzCJ,kBAAkB,CAACI,OAAO,CAAC,CAE3B;AACA,GAAIP,gBAAgB,CAAE,CACpB,KAAM,CAAAU,IAAI,CAAGV,gBAAgB,CAACW,YAAY,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,eAAe,GAAKP,OAAO,CAAC,CACnFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEC,IAAI,CAAC,CAC7C,GAAIA,IAAI,CAAE,CACR;AACAK,UAAU,CAAC,IAAM,CACf,KAAM,CAAAC,WAAW,CAAGC,QAAQ,CAACC,aAAa,oBAAAC,MAAA,CAAmBT,IAAI,CAACU,EAAE,OAAI,CAAC,CACzEZ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEC,IAAI,CAACU,EAAE,CAAEJ,WAAW,CAAC,CACjE,GAAIA,WAAW,CAAE,CACfR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEC,IAAI,CAACW,KAAK,CAAC,CAC/CL,WAAW,CAACM,cAAc,CAAC,CACzBC,QAAQ,CAAE,QAAQ,CAClBC,KAAK,CAAE,QAAQ,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CAEF;AACAT,WAAW,CAACU,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAE,eAAe,CAAE,iBAAiB,CAAC,CACvEZ,UAAU,CAAC,IAAM,CACfC,WAAW,CAACU,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAE,eAAe,CAAE,iBAAiB,CAAC,CAC5E,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLpB,OAAO,CAACqB,IAAI,CAAC,kCAAkC,CAAEnB,IAAI,CAACU,EAAE,CAAC,CAC3D,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,IAAM,CACLZ,OAAO,CAACqB,IAAI,CAAC,+BAA+B,CAAEtB,OAAO,CAAC,CACxD,CACF,CACF,CAAC,CACD,KAAM,CAACuB,aAAa,CAAEC,gBAAgB,CAAC,CAAGtD,QAAQ,CAAgB,IAAI,CAAC,CACvE,KAAM,CAACuD,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGxD,QAAQ,CAAC,KAAK,CAAC,CACnE,KAAM,CAACyD,aAAa,CAAEC,gBAAgB,CAAC,CAAG1D,QAAQ,CAAgB,IAAI,CAAC,CAEvE;AACAC,SAAS,CAAC,IAAM,CACd,GAAI,CAAA0D,UAA0B,CAE9B,GAAIzC,eAAe,CAACE,MAAM,GAAK,YAAY,EAAIiC,aAAa,CAAE,CAC5DtB,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAEqB,aAAa,CAAC,CACzEM,UAAU,CAAGC,WAAW,CAAC,SAAY,CACnC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAvD,UAAU,CAACwD,WAAW,CAACT,aAAa,CAAC,CACxDtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAE6B,IAAI,CAAC,CAE7C1C,kBAAkB,CAAC4C,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAClBD,IAAI,MACP3C,MAAM,CAAEyC,IAAI,CAACzC,MAAM,GAAK,WAAW,CAAG,WAAW,CAAG,YAAY,CAChEC,QAAQ,CAAEwC,IAAI,CAACxC,QAAQ,CACvBC,OAAO,CAAEuC,IAAI,CAACvC,OAAO,EACrB,CAAC,CAEH;AACA,GAAIuC,IAAI,CAACzC,MAAM,GAAK,WAAW,CAAE,CAC/B,GAAI,KAAA6C,oBAAA,CAAAC,qBAAA,CAAAC,oBAAA,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA9D,UAAU,CAAC+D,SAAS,CAAChB,aAAa,CAAC,CACxDtB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEoC,MAAM,CAAC,CACzCrC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAE,CACvCsC,YAAY,CAAEF,MAAM,CAACE,YAAY,CACjCC,kBAAkB,CAAEH,MAAM,CAACG,kBAAkB,CAC7CC,mBAAmB,EAAAP,oBAAA,CAAEG,MAAM,CAAClC,YAAY,UAAA+B,oBAAA,iBAAnBA,oBAAA,CAAqBQ,MAAM,CAChDC,oBAAoB,EAAAR,qBAAA,CAAEE,MAAM,CAACO,aAAa,UAAAT,qBAAA,iBAApBA,qBAAA,CAAsBO,MAAM,CAClDG,mBAAmB,EAAAT,oBAAA,CAAEC,MAAM,CAACS,YAAY,UAAAV,oBAAA,iBAAnBA,oBAAA,CAAqBM,MAC5C,CAAC,CAAC,CACF,GAAIL,MAAM,CAAClC,YAAY,EAAIkC,MAAM,CAAClC,YAAY,CAACuC,MAAM,CAAG,CAAC,CAAE,CACzD1C,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEoC,MAAM,CAAClC,YAAY,CAAC,CAAC,CAAC,CAAC,CAClE,CACAV,mBAAmB,CAAC4C,MAAM,CAAC,CAC3BjD,kBAAkB,CAAC4C,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAClBD,IAAI,MACP3C,MAAM,CAAE,WAAW,CACnBC,QAAQ,CAAE,GAAG,CACbC,OAAO,cAAAoB,MAAA,CAAe0B,MAAM,CAACE,YAAY,kBAAA5B,MAAA,CAAgB0B,MAAM,CAACG,kBAAkB,uBAAqB,EACvG,CAAC,CACL,CAAE,MAAOO,KAAK,CAAE,CACd/C,OAAO,CAAC+C,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD3D,kBAAkB,CAAC4C,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAClBD,IAAI,MACP3C,MAAM,CAAE,OAAO,CACfE,OAAO,CAAE,iCAAiC,EAC1C,CAAC,CACL,CACF,CAEF,CAAE,MAAOwD,KAAK,CAAE,CACd/C,OAAO,CAAC+C,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAAE,GAAG,CAAC,CAAE;AACX,CAEA,MAAO,IAAM,CACX,GAAInB,UAAU,CAAE,CACd5B,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnD+C,aAAa,CAACpB,UAAU,CAAC,CAC3B,CACF,CAAC,CACH,CAAC,CAAE,CAACzC,eAAe,CAACE,MAAM,CAAEiC,aAAa,CAAC,CAAC,CAE3C,KAAM,CAAA2B,oBAAoB,CAAIZ,MAAwB,EAAK,CACzD5C,mBAAmB,CAAC4C,MAAM,CAAC,CAC3BjD,kBAAkB,CAAC,CACjBC,MAAM,CAAE,WAAW,CACnBC,QAAQ,CAAE,GAAG,CACbC,OAAO,cAAAoB,MAAA,CAAe0B,MAAM,CAACE,YAAY,kBAAA5B,MAAA,CAAgB0B,MAAM,CAACG,kBAAkB,uBACpF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAU,iBAAiB,CAAG,KAAO,CAAAC,IAAU,EAAK,CAC9C,GAAI,CACF/D,kBAAkB,CAAC,CACjBC,MAAM,CAAE,YAAY,CACpBC,QAAQ,CAAE,CAAC,CACXC,OAAO,CAAE,8BACX,CAAC,CAAC,CAEF;AACA,KAAM,CAAE6D,OAAQ,CAAC,CAAG,KAAM,CAAA7E,UAAU,CAAC8E,YAAY,CAACF,IAAI,CAAC,CACvD5B,gBAAgB,CAAC6B,OAAO,CAAC,CACzBpD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEmD,OAAO,CAAC,CAE/C,CAAE,MAAOL,KAAK,CAAE,CACd/C,OAAO,CAAC+C,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D3D,kBAAkB,CAAC,CACjBC,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,CAAC,CACXC,OAAO,gCAAAoB,MAAA,CAAiCoC,KAAK,WAAY,CAAAO,KAAK,CAAGP,KAAK,CAACxD,OAAO,CAAG,eAAe,CAClG,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAgE,WAAW,CAAGA,CAAA,GAAM,CACxBnE,kBAAkB,CAAC,CACjBC,MAAM,CAAE,MAAM,CACdC,QAAQ,CAAE,CAAC,CACXC,OAAO,CAAE,yBACX,CAAC,CAAC,CACFE,mBAAmB,CAAC,IAAI,CAAC,CACzBE,kBAAkB,CAAC,IAAI,CAAC,CACxBE,cAAc,CAAC,KAAK,CAAC,CACrB0B,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,mBACEtC,KAAA,QAAKuE,SAAS,CAAC,qFAAqF,CAAAC,QAAA,eAClG1E,IAAA,CAACZ,OAAO,EAACuF,QAAQ,CAAC,WAAW,CAAE,CAAC,cAGhC3E,IAAA,WAAQyE,SAAS,CAAC,+DAA+D,CAAAC,QAAA,cAC/E1E,IAAA,QAAKyE,SAAS,CAAC,wCAAwC,CAAAC,QAAA,cACrDxE,KAAA,QAAKuE,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrD1E,IAAA,OAAIyE,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,qBAErD,CAAI,CAAC,cACL1E,IAAA,QAAKyE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1CxE,KAAA,WACE0E,OAAO,CAAEA,CAAA,GAAMC,MAAM,CAACC,IAAI,CAAC,4BAA4B,CAAE,QAAQ,CAAE,CACnEL,SAAS,CAAC,kIAAkI,CAAAC,QAAA,eAE5I1E,IAAA,CAACT,QAAQ,EAACkF,SAAS,CAAC,SAAS,CAAE,CAAC,cAChCzE,IAAA,SAAA0E,QAAA,CAAM,UAAQ,CAAM,CAAC,EACf,CAAC,CACN,CAAC,EACH,CAAC,CACH,CAAC,CACA,CAAC,cAGT1E,IAAA,SAAMyE,SAAS,CAAC,6CAA6C,CAAAC,QAAA,cAC3DxE,KAAA,CAACZ,eAAe,EAACyF,IAAI,CAAC,MAAM,CAAAL,QAAA,EACzBtE,eAAe,CAACE,MAAM,GAAK,MAAM,eAChCN,IAAA,CAACX,MAAM,CAAC2F,GAAG,EAETC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC/BC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAE,CAC7BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAb,QAAA,cAE9B1E,IAAA,CAACP,aAAa,EAAC+F,aAAa,CAAErB,iBAAkB,CAAE,CAAC,EAN/C,QAOM,CACb,CAEA/D,eAAe,CAACE,MAAM,GAAK,YAAY,eACtCN,IAAA,CAACX,MAAM,CAAC2F,GAAG,EAETC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC/BC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAE,CAC7BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAb,QAAA,cAE9B1E,IAAA,CAACJ,gBAAgB,EAAC6F,KAAK,CAAErF,eAAgB,CAAE,CAAC,EANxC,YAOM,CACb,CAEAA,eAAe,CAACE,MAAM,GAAK,WAAW,EAAIG,gBAAgB,eACzDT,IAAA,CAACX,MAAM,CAAC2F,GAAG,EAETC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC/BC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAE,CAC7BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAb,QAAA,cAE9BxE,KAAA,QAAKuE,SAAS,CAAC,WAAW,CAAAC,QAAA,eAExBxE,KAAA,QAAKuE,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B1E,IAAA,OAAIyE,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,oBAEvD,CAAI,CAAC,cACLxE,KAAA,MAAGuE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,QACtB,CAACjE,gBAAgB,CAAC+C,YAAY,CAAC,eAAa,CAAC/C,gBAAgB,CAACgD,kBAAkB,CAAC,qBACzF,EAAG,CAAC,cACJzD,IAAA,WACE4E,OAAO,CAAEJ,WAAY,CACrBC,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CACnG,uBAED,CAAQ,CAAC,EACN,CAAC,cAGNxE,KAAA,QAAKuE,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAEpDxE,KAAA,QAAKuE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1E,IAAA,OAAIyE,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,cACzE1E,IAAA,CAACN,eAAe,EACdgG,QAAQ,IAAA9D,MAAA,CAAKpC,UAAU,CAACmG,UAAU,CAAC,CAAC,EAAA/D,MAAA,CAAGnB,gBAAgB,CAACmF,SAAS,CAAG,CACpEC,YAAY,CAAEpF,gBAAgB,CAACoD,aAAc,CAC7CiC,WAAW,CAAErF,gBAAgB,CAACW,YAAa,CAC3CT,eAAe,CAAEA,eAAgB,CACjCoF,eAAe,CAAEhF,mBAAoB,CACrCF,WAAW,CAAEA,WAAY,CACzBmF,qBAAqB,CAAGC,cAAc,EAAK,CACzCvF,mBAAmB,CAACuC,IAAI,EAAIA,IAAI,CAAAC,aAAA,CAAAA,aAAA,IAC3BD,IAAI,MACPY,aAAa,CAAEoC,cAAc,GAC3B,IAAI,CAAC,CACX,CAAE,CACFC,kBAAkB,CAAGC,QAAQ,EAAK,CAChCzF,mBAAmB,CAACuC,IAAI,EAAIA,IAAI,CAAAC,aAAA,CAAAA,aAAA,IAC3BD,IAAI,MACPY,aAAa,CAAE,CAAC,GAAGZ,IAAI,CAACY,aAAa,CAAEsC,QAAQ,CAAC,CAChD;AACA/E,YAAY,CAAE6B,IAAI,CAAC7B,YAAY,CAACgF,GAAG,CAACjF,IAAI,EACtCA,IAAI,CAACU,EAAE,GAAKc,aAAa,CAAAO,aAAA,CAAAA,aAAA,IAChB/B,IAAI,MAAEI,eAAe,CAAE4E,QAAQ,CAACtE,EAAE,GACvCV,IACN,CAAC,GACC,IAAI,CAAC,CACT;AACAyB,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAE,CACFyD,aAAa,CAAEA,CAAA,GAAMzD,gBAAgB,CAAC,IAAI,CAAE,CAC5CD,aAAa,CAAEA,aAAc,CAC9B,CAAC,EACC,CAAC,cAGNzC,KAAA,QAAKuE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1E,IAAA,OAAIyE,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC1E1E,IAAA,CAACL,eAAe,EACdmG,WAAW,CAAErF,gBAAgB,CAACW,YAAa,CAC3CkF,WAAW,CAAE7F,gBAAgB,CAACsD,YAAa,CAC3CpD,eAAe,CAAEA,eAAgB,CACjCoF,eAAe,CAAEhF,mBAAoB,CACrCwF,iBAAiB,CAAGC,cAAc,EAAK,CACrC9F,mBAAmB,CAACuC,IAAI,EAAIA,IAAI,CAAAC,aAAA,CAAAA,aAAA,IAC3BD,IAAI,MACP7B,YAAY,CAAEoF,cAAc,CAC5B;AACA3C,aAAa,CAAEZ,IAAI,CAACY,aAAa,CAAC4C,MAAM,CAACC,KAAK,EAC5CF,cAAc,CAACG,IAAI,CAACxF,IAAI,EAAIA,IAAI,CAACI,eAAe,GAAKmF,KAAK,CAAC7E,EAAE,CAC/D,CAAC,GACC,IAAI,CAAC,CACX,CAAE,CACF+E,cAAc,CAAGC,MAAM,EAAK,CAC1B5F,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAE2F,MAAM,CAAC,CACjD5F,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEyB,aAAa,CAAC,CAClE,GAAIA,aAAa,GAAKkE,MAAM,CAAE,CAC5B5F,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC,CAC/D0B,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,IAAM,CACL3B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAE2F,MAAM,CAAC,CACnDjE,gBAAgB,CAACiE,MAAM,CAAC,CAC1B,CACF,CAAE,CACFR,aAAa,CAAEA,CAAA,GAAMzD,gBAAgB,CAAC,IAAI,CAAE,CAC7C,CAAC,EACC,CAAC,EACH,CAAC,cAGN5C,IAAA,CAACH,aAAa,EACZY,gBAAgB,CAAEA,gBAAiB,CACnCqG,YAAY,CAAEA,CAAA,GAAMhG,cAAc,CAAC,KAAK,CAAE,CAC3C,CAAC,EACC,CAAC,EAnGF,SAoGM,CACb,CAEAV,eAAe,CAACE,MAAM,GAAK,OAAO,eACjCN,IAAA,CAACX,MAAM,CAAC2F,GAAG,EAETC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC/BC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAE,CAC7BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAb,QAAA,cAE9BxE,KAAA,QAAKuE,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B1E,IAAA,OAAIyE,SAAS,CAAC,sCAAsC,CAAAC,QAAA,CAAC,mBAErD,CAAI,CAAC,cACL1E,IAAA,MAAGyE,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAC/BtE,eAAe,CAACI,OAAO,CACvB,CAAC,cACJR,IAAA,WACE4E,OAAO,CAAEJ,WAAY,CACrBC,SAAS,CAAC,mFAAmF,CAAAC,QAAA,CAC9F,WAED,CAAQ,CAAC,EACN,CAAC,EAnBF,OAoBM,CACb,EACc,CAAC,CACd,CAAC,cAGP1E,IAAA,CAACF,gBAAgB,EACfiH,MAAM,CAAEtE,kBAAmB,CAC3BuE,OAAO,CAAEA,CAAA,GAAMtE,qBAAqB,CAAC,KAAK,CAAE,CAC5CuE,cAAc,CAAG9F,IAAI,EAAK,CACxBF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEC,IAAI,CAAC,CACtD;AACA;AACF,CAAE,CACH,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}