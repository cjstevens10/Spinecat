{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\CursorWorkspace\\\\Spinecat\\\\web_interface\\\\src\\\\components\\\\SpineVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { BookOpen, AlertCircle, Edit3, Plus, Save, X, Move } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpineVisualizer = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized,\n  onSpineRegionsUpdated,\n  onManualSpineAdded\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState(null);\n  const [imageScale, setImageScale] = useState({\n    scaleX: 1,\n    scaleY: 1,\n    offsetX: 0,\n    offsetY: 0\n  });\n  const [overlayRect, setOverlayRect] = useState(null);\n  const [editingState, setEditingState] = useState({\n    mode: 'none',\n    spineId: null,\n    vertexIndex: null,\n    isDragging: false\n  });\n  const [drawingPoints, setDrawingPoints] = useState([]);\n  const imageRef = useRef(null);\n  const containerRef = useRef(null);\n  const svgRef = useRef(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n\n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n\n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        setImageScale({\n          scaleX,\n          scaleY,\n          offsetX,\n          offsetY\n        });\n        setOverlayRect({\n          left: offsetX,\n          top: offsetY,\n          width: imgRect.width,\n          height: imgRect.height\n        });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Convert spine polygon to scaled SVG points string\n  const getScaledPoints = spine => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return '';\n    return spine.coordinates.map(([x, y]) => {\n      const sx = x * imageScale.scaleX;\n      const sy = y * imageScale.scaleY;\n      return `${sx},${sy}`;\n    }).join(' ');\n  };\n\n  // Convert SVG coordinates back to image coordinates\n  const getImageCoordinates = (svgX, svgY) => {\n    return [svgX / imageScale.scaleX, svgY / imageScale.scaleY];\n  };\n\n  // Compute centroid for label/tooltip positioning within overlay\n  const getCentroid = spine => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return {\n      x: 0,\n      y: 0\n    };\n    const pts = spine.coordinates;\n    const cx = pts.reduce((a, p) => a + p[0], 0) / pts.length;\n    const cy = pts.reduce((a, p) => a + p[1], 0) / pts.length;\n    return {\n      x: cx * imageScale.scaleX,\n      y: cy * imageScale.scaleY\n    };\n  };\n\n  // Helper function to get spine region by ID\n  const getSpineRegion = id => {\n    return spineRegions.find(spine => spine.id === id);\n  };\n\n  // Helper function to get book data for a spine\n  const getBookData = spineId => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = spineId => {\n    if (editingState.mode === 'drawing') return; // Don't select while drawing\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = spineId => {\n    if (editingState.mode === 'drawing') return; // Don't hover while drawing\n    setHoveredSpineId(spineId);\n  };\n\n  // Start editing mode for a spine\n  const startEditing = spineId => {\n    setEditingState({\n      mode: 'editing',\n      spineId,\n      vertexIndex: null,\n      isDragging: false\n    });\n  };\n\n  // Start drawing mode for manual entry\n  const startDrawing = () => {\n    setEditingState({\n      mode: 'drawing',\n      spineId: null,\n      vertexIndex: null,\n      isDragging: false\n    });\n    setDrawingPoints([]);\n  };\n\n  // Cancel editing/drawing mode\n  const cancelEditing = () => {\n    setEditingState({\n      mode: 'none',\n      spineId: null,\n      vertexIndex: null,\n      isDragging: false\n    });\n    setDrawingPoints([]);\n  };\n\n  // Save manual drawing\n  const saveManualDrawing = () => {\n    if (drawingPoints.length >= 3 && onManualSpineAdded) {\n      const newSpine = {\n        id: `manual_${Date.now()}`,\n        x: Math.min(...drawingPoints.map(p => p[0])),\n        y: Math.min(...drawingPoints.map(p => p[1])),\n        width: Math.max(...drawingPoints.map(p => p[0])) - Math.min(...drawingPoints.map(p => p[0])),\n        height: Math.max(...drawingPoints.map(p => p[1])) - Math.min(...drawingPoints.map(p => p[1])),\n        rotation: 0,\n        confidence: 0.9,\n        coordinates: drawingPoints\n      };\n      onManualSpineAdded(newSpine);\n      cancelEditing();\n    }\n  };\n\n  // Handle SVG click for drawing\n  const handleSvgClick = event => {\n    if (editingState.mode !== 'drawing') return;\n    const svg = svgRef.current;\n    if (!svg) return;\n    const rect = svg.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const imageCoords = getImageCoordinates(x, y);\n    setDrawingPoints(prev => [...prev, imageCoords]);\n  };\n\n  // Handle vertex drag start\n  const handleVertexDragStart = (spineId, vertexIndex) => {\n    setEditingState(prev => ({\n      ...prev,\n      mode: 'editing',\n      spineId,\n      vertexIndex,\n      isDragging: true\n    }));\n  };\n\n  // Handle vertex drag\n  const handleVertexDrag = useCallback((spineId, vertexIndex, newX, newY) => {\n    if (!onSpineRegionsUpdated) return;\n    const imageCoords = getImageCoordinates(newX, newY);\n    const updatedRegions = spineRegions.map(spine => {\n      if (spine.id === spineId && spine.coordinates) {\n        const newCoordinates = [...spine.coordinates];\n        newCoordinates[vertexIndex] = imageCoords;\n        return {\n          ...spine,\n          coordinates: newCoordinates\n        };\n      }\n      return spine;\n    });\n    onSpineRegionsUpdated(updatedRegions);\n  }, [spineRegions, onSpineRegionsUpdated, imageScale]);\n\n  // Handle mouse move for vertex dragging\n  const handleMouseMove = useCallback(event => {\n    if (editingState.mode !== 'editing' || !editingState.isDragging || !editingState.spineId || editingState.vertexIndex === null) return;\n    const svg = svgRef.current;\n    if (!svg) return;\n    const rect = svg.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    handleVertexDrag(editingState.spineId, editingState.vertexIndex, x, y);\n  }, [editingState, handleVertexDrag]);\n\n  // Handle vertex drag end\n  const handleVertexDragEnd = () => {\n    setEditingState(prev => ({\n      ...prev,\n      isDragging: false\n    }));\n  };\n\n  // Render vertex handles for editing\n  const renderVertexHandles = spine => {\n    var _spine$coordinates;\n    if (editingState.mode !== 'editing' || editingState.spineId !== spine.id) return null;\n    return (_spine$coordinates = spine.coordinates) === null || _spine$coordinates === void 0 ? void 0 : _spine$coordinates.map((coord, index) => {\n      const [x, y] = coord;\n      const svgX = x * imageScale.scaleX;\n      const svgY = y * imageScale.scaleY;\n      return /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: svgX,\n        cy: svgY,\n        r: 6,\n        fill: \"#FF6B6B\",\n        stroke: \"#FF4757\",\n        strokeWidth: 2,\n        cursor: \"move\",\n        onMouseDown: e => {\n          e.stopPropagation();\n          handleVertexDragStart(spine.id, index);\n        },\n        onMouseUp: handleVertexDragEnd,\n        style: {\n          pointerEvents: editingState.isDragging ? 'none' : 'auto'\n        }\n      }, `vertex-${spine.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Render drawing points\n  const renderDrawingPoints = () => {\n    if (editingState.mode !== 'drawing' || drawingPoints.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [drawingPoints.length > 1 && /*#__PURE__*/_jsxDEV(\"polyline\", {\n        points: drawingPoints.map(([x, y]) => `${x * imageScale.scaleX},${y * imageScale.scaleY}`).join(' '),\n        fill: \"none\",\n        stroke: \"#FF6B6B\",\n        strokeWidth: 2,\n        strokeDasharray: \"5,5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), drawingPoints.map(([x, y], index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: x * imageScale.scaleX,\n        cy: y * imageScale.scaleY,\n        r: 4,\n        fill: \"#FF6B6B\",\n        stroke: \"#FF4757\",\n        strokeWidth: 2\n      }, `drawing-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render spine region as polygon within an SVG aligned to the image\n  const renderSpineRegion = spine => {\n    const book = getBookData(spine.id);\n    const points = getScaledPoints(spine);\n    const {\n      x: cx,\n      y: cy\n    } = getCentroid(spine);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const isEditing = editingState.mode === 'editing' && editingState.spineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n    const fill = isEditing ? 'rgba(255,107,107,0.3)' : isSelected ? 'rgba(59,130,246,0.25)' : isHovered ? 'rgba(59,130,246,0.18)' : 'rgba(59,130,246,0.12)';\n    const stroke = isEditing ? '#FF6B6B' : isSelected ? '#60A5FA' : isHovered ? '#3B82F6' : '#2563EB';\n    const opacity = isOtherSelected && !isEditing ? 0.35 : 1;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      style: {\n        opacity\n      },\n      onMouseEnter: () => handleSpineHover(spine.id),\n      onMouseLeave: () => handleSpineHover(null),\n      onClick: () => handleSpineClick(spine.id),\n      children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: points,\n        fill: fill,\n        stroke: stroke,\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: cx,\n        y: cy,\n        textAnchor: \"middle\",\n        dominantBaseline: \"middle\",\n        fill: \"#fff\",\n        fontSize: 12,\n        fontWeight: 600,\n        children: spineRegions.findIndex(s => s.id === spine.id) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), !isFinalized && /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: cx + 20,\n          cy: cy - 20,\n          r: 12,\n          fill: \"rgba(0,0,0,0.7)\",\n          stroke: \"#FF6B6B\",\n          strokeWidth: 1,\n          cursor: \"pointer\",\n          onClick: e => {\n            e.stopPropagation();\n            startEditing(spine.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Edit3, {\n          x: cx + 20 - 6,\n          y: cy - 20 + 6,\n          size: 12,\n          color: \"#FF6B6B\",\n          style: {\n            pointerEvents: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), renderVertexHandles(spine), hoveredSpineId === spine.id && book && overlayRect && !isEditing && /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n        x: Math.min(Math.max(cx + 8, 0), overlayRect.width - 200),\n        y: Math.max(cy - 40, 0),\n        width: 200,\n        height: 80,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white text-xs px-3 py-2 rounded-lg shadow-lg\",\n          style: {\n            pointerEvents: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium mb-1 truncate\",\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300 truncate\",\n            children: [\"by \", Array.isArray(book.author_name) ? book.author_name.join(', ') : book.author_name || 'Unknown Author']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), book.first_publish_year && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400\",\n            children: book.first_publish_year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this)]\n    }, spine.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-0 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-900 mb-2\",\n            children: \"Book Spine Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: [spineRegions.length, \" spine\", spineRegions.length !== 1 ? 's' : '', \" detected\", bookMatches.length > 0 && ` • ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), !isFinalized && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [editingState.mode === 'none' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startDrawing,\n              className: \"btn-secondary text-sm px-3 py-1 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Draw OBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), editingState.mode === 'drawing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveManualDrawing,\n              disabled: drawingPoints.length < 3,\n              className: \"btn-primary text-sm px-3 py-1 flex items-center space-x-1 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Save OBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              className: \"btn-danger text-sm px-3 py-1 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(X, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), editingState.mode === 'editing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              className: \"btn-secondary text-sm px-3 py-1 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(Move, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Drag vertices to edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              className: \"btn-primary text-sm px-3 py-1 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative bg-gray-100 min-h-[400px] flex items-center justify-center\",\n      children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: imageUrl,\n        alt: \"Book spines\",\n        className: \"max-w-full max-h-[600px] object-contain\",\n        onLoad: () => setImageLoaded(true),\n        onError: () => setImageLoaded(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), imageLoaded && overlayRect && /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"absolute cursor-crosshair\",\n        style: {\n          left: overlayRect.left,\n          top: overlayRect.top\n        },\n        width: overlayRect.width,\n        height: overlayRect.height,\n        onClick: handleSvgClick,\n        children: [spineRegions.map(renderSpineRegion), renderDrawingPoints()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), imageLoaded && spineRegions.length === 0 && editingState.mode !== 'drawing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"No book spines detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Try uploading a clearer image or draw spines manually\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), imageLoaded && editingState.mode === 'drawing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 left-4 bg-blue-600 text-white px-4 py-2 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium\",\n          children: \"Click to add vertices. Need at least 3 points.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs opacity-90\",\n          children: \"Click \\\"Save OBB\\\" when done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), spineRegions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-500 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Detected spine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), !isFinalized && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-red-500 rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Editing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-red-400 rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Drawing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs\",\n          children: [editingState.mode === 'none' && 'Click on spine regions to select books', editingState.mode === 'drawing' && 'Click on image to draw spine outline', editingState.mode === 'editing' && 'Drag red vertices to edit spine shape']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(SpineVisualizer, \"/764WChxFMp323yi+A+hR5WXECY=\");\n_c = SpineVisualizer;\nexport default SpineVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SpineVisualizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","BookOpen","AlertCircle","Edit3","Plus","Save","X","Move","jsxDEV","_jsxDEV","Fragment","_Fragment","SpineVisualizer","imageUrl","spineRegions","bookMatches","selectedSpineId","onSpineSelected","isFinalized","onSpineRegionsUpdated","onManualSpineAdded","_s","imageLoaded","setImageLoaded","hoveredSpineId","setHoveredSpineId","imageScale","setImageScale","scaleX","scaleY","offsetX","offsetY","overlayRect","setOverlayRect","editingState","setEditingState","mode","spineId","vertexIndex","isDragging","drawingPoints","setDrawingPoints","imageRef","containerRef","svgRef","current","img","container","containerRect","getBoundingClientRect","imgRect","width","naturalWidth","height","naturalHeight","left","top","getScaledPoints","spine","coordinates","length","map","x","y","sx","sy","join","getImageCoordinates","svgX","svgY","getCentroid","pts","cx","reduce","a","p","cy","getSpineRegion","id","find","getBookData","book","spine_region_id","handleSpineClick","handleSpineHover","startEditing","startDrawing","cancelEditing","saveManualDrawing","newSpine","Date","now","Math","min","max","rotation","confidence","handleSvgClick","event","svg","rect","clientX","clientY","imageCoords","prev","handleVertexDragStart","handleVertexDrag","newX","newY","updatedRegions","newCoordinates","handleMouseMove","handleVertexDragEnd","renderVertexHandles","_spine$coordinates","coord","index","r","fill","stroke","strokeWidth","cursor","onMouseDown","e","stopPropagation","onMouseUp","style","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","renderDrawingPoints","children","points","strokeDasharray","renderSpineRegion","isSelected","isHovered","isEditing","hasSelection","isOtherSelected","opacity","onMouseEnter","onMouseLeave","onClick","textAnchor","dominantBaseline","fontSize","fontWeight","findIndex","s","size","color","className","title","Array","isArray","author_name","first_publish_year","disabled","ref","src","alt","onLoad","onError","_c","$RefreshReg$"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/components/SpineVisualizer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { BookOpen, AlertCircle, Edit3, Plus, Save, X, Move } from 'lucide-react';\n\nimport { SpineRegion, BookMatch } from '../types';\n\ninterface SpineVisualizerProps {\n  imageUrl: string;\n  spineRegions: SpineRegion[];\n  bookMatches: BookMatch[];\n  selectedSpineId: string | null;\n  onSpineSelected: (spineId: string) => void;\n  isFinalized: boolean;\n  onSpineRegionsUpdated?: (updatedRegions: SpineRegion[]) => void;\n  onManualSpineAdded?: (newSpine: SpineRegion) => void;\n}\n\ninterface EditingState {\n  mode: 'none' | 'drawing' | 'editing';\n  spineId: string | null;\n  vertexIndex: number | null;\n  isDragging: boolean;\n}\n\nconst SpineVisualizer: React.FC<SpineVisualizerProps> = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized,\n  onSpineRegionsUpdated,\n  onManualSpineAdded\n}) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState<string | null>(null);\n  const [imageScale, setImageScale] = useState({ scaleX: 1, scaleY: 1, offsetX: 0, offsetY: 0 });\n  const [overlayRect, setOverlayRect] = useState<{ left: number; top: number; width: number; height: number } | null>(null);\n  const [editingState, setEditingState] = useState<EditingState>({\n    mode: 'none',\n    spineId: null,\n    vertexIndex: null,\n    isDragging: false\n  });\n  const [drawingPoints, setDrawingPoints] = useState<[number, number][]>([]);\n  \n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      \n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n        \n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n        \n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        \n        setImageScale({ scaleX, scaleY, offsetX, offsetY });\n        setOverlayRect({ left: offsetX, top: offsetY, width: imgRect.width, height: imgRect.height });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Convert spine polygon to scaled SVG points string\n  const getScaledPoints = (spine: SpineRegion) => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return '';\n    return spine.coordinates\n      .map(([x, y]) => {\n        const sx = x * imageScale.scaleX;\n        const sy = y * imageScale.scaleY;\n        return `${sx},${sy}`;\n      })\n      .join(' ');\n  };\n\n  // Convert SVG coordinates back to image coordinates\n  const getImageCoordinates = (svgX: number, svgY: number): [number, number] => {\n    return [svgX / imageScale.scaleX, svgY / imageScale.scaleY];\n  };\n\n  // Compute centroid for label/tooltip positioning within overlay\n  const getCentroid = (spine: SpineRegion) => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return { x: 0, y: 0 };\n    const pts = spine.coordinates;\n    const cx = pts.reduce((a, p) => a + p[0], 0) / pts.length;\n    const cy = pts.reduce((a, p) => a + p[1], 0) / pts.length;\n    return { x: cx * imageScale.scaleX, y: cy * imageScale.scaleY };\n  };\n\n  // Helper function to get spine region by ID\n  const getSpineRegion = (id: string) => {\n    return spineRegions.find(spine => spine.id === id);\n  };\n\n  // Helper function to get book data for a spine\n  const getBookData = (spineId: string) => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = (spineId: string) => {\n    if (editingState.mode === 'drawing') return; // Don't select while drawing\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = (spineId: string | null) => {\n    if (editingState.mode === 'drawing') return; // Don't hover while drawing\n    setHoveredSpineId(spineId);\n  };\n\n  // Start editing mode for a spine\n  const startEditing = (spineId: string) => {\n    setEditingState({\n      mode: 'editing',\n      spineId,\n      vertexIndex: null,\n      isDragging: false\n    });\n  };\n\n  // Start drawing mode for manual entry\n  const startDrawing = () => {\n    setEditingState({\n      mode: 'drawing',\n      spineId: null,\n      vertexIndex: null,\n      isDragging: false\n    });\n    setDrawingPoints([]);\n  };\n\n  // Cancel editing/drawing mode\n  const cancelEditing = () => {\n    setEditingState({\n      mode: 'none',\n      spineId: null,\n      vertexIndex: null,\n      isDragging: false\n    });\n    setDrawingPoints([]);\n  };\n\n  // Save manual drawing\n  const saveManualDrawing = () => {\n    if (drawingPoints.length >= 3 && onManualSpineAdded) {\n      const newSpine: SpineRegion = {\n        id: `manual_${Date.now()}`,\n        x: Math.min(...drawingPoints.map(p => p[0])),\n        y: Math.min(...drawingPoints.map(p => p[1])),\n        width: Math.max(...drawingPoints.map(p => p[0])) - Math.min(...drawingPoints.map(p => p[0])),\n        height: Math.max(...drawingPoints.map(p => p[1])) - Math.min(...drawingPoints.map(p => p[1])),\n        rotation: 0,\n        confidence: 0.9,\n        coordinates: drawingPoints\n      };\n      \n      onManualSpineAdded(newSpine);\n      cancelEditing();\n    }\n  };\n\n  // Handle SVG click for drawing\n  const handleSvgClick = (event: React.MouseEvent<SVGSVGElement>) => {\n    if (editingState.mode !== 'drawing') return;\n    \n    const svg = svgRef.current;\n    if (!svg) return;\n    \n    const rect = svg.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    const imageCoords = getImageCoordinates(x, y);\n    setDrawingPoints(prev => [...prev, imageCoords]);\n  };\n\n  // Handle vertex drag start\n  const handleVertexDragStart = (spineId: string, vertexIndex: number) => {\n    setEditingState(prev => ({\n      ...prev,\n      mode: 'editing',\n      spineId,\n      vertexIndex,\n      isDragging: true\n    }));\n  };\n\n  // Handle vertex drag\n  const handleVertexDrag = useCallback((spineId: string, vertexIndex: number, newX: number, newY: number) => {\n    if (!onSpineRegionsUpdated) return;\n    \n    const imageCoords = getImageCoordinates(newX, newY);\n    const updatedRegions = spineRegions.map(spine => {\n      if (spine.id === spineId && spine.coordinates) {\n        const newCoordinates = [...spine.coordinates];\n        newCoordinates[vertexIndex] = imageCoords;\n        return { ...spine, coordinates: newCoordinates };\n      }\n      return spine;\n    });\n    \n    onSpineRegionsUpdated(updatedRegions);\n  }, [spineRegions, onSpineRegionsUpdated, imageScale]);\n\n  // Handle mouse move for vertex dragging\n  const handleMouseMove = useCallback((event: React.MouseEvent<SVGSVGElement>) => {\n    if (editingState.mode !== 'editing' || !editingState.isDragging || !editingState.spineId || editingState.vertexIndex === null) return;\n    \n    const svg = svgRef.current;\n    if (!svg) return;\n    \n    const rect = svg.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    handleVertexDrag(editingState.spineId, editingState.vertexIndex, x, y);\n  }, [editingState, handleVertexDrag]);\n\n  // Handle vertex drag end\n  const handleVertexDragEnd = () => {\n    setEditingState(prev => ({\n      ...prev,\n      isDragging: false\n    }));\n  };\n\n  // Render vertex handles for editing\n  const renderVertexHandles = (spine: SpineRegion) => {\n    if (editingState.mode !== 'editing' || editingState.spineId !== spine.id) return null;\n    \n    return spine.coordinates?.map((coord, index) => {\n      const [x, y] = coord;\n      const svgX = x * imageScale.scaleX;\n      const svgY = y * imageScale.scaleY;\n      \n      return (\n        <circle\n          key={`vertex-${spine.id}-${index}`}\n          cx={svgX}\n          cy={svgY}\n          r={6}\n          fill=\"#FF6B6B\"\n          stroke=\"#FF4757\"\n          strokeWidth={2}\n          cursor=\"move\"\n          onMouseDown={(e) => {\n            e.stopPropagation();\n            handleVertexDragStart(spine.id, index);\n          }}\n          onMouseUp={handleVertexDragEnd}\n          style={{ pointerEvents: editingState.isDragging ? 'none' : 'auto' }}\n        />\n      );\n    });\n  };\n\n  // Render drawing points\n  const renderDrawingPoints = () => {\n    if (editingState.mode !== 'drawing' || drawingPoints.length === 0) return null;\n    \n    return (\n      <g>\n        {/* Draw lines between points */}\n        {drawingPoints.length > 1 && (\n          <polyline\n            points={drawingPoints.map(([x, y]) => `${x * imageScale.scaleX},${y * imageScale.scaleY}`).join(' ')}\n            fill=\"none\"\n            stroke=\"#FF6B6B\"\n            strokeWidth={2}\n            strokeDasharray=\"5,5\"\n          />\n        )}\n        \n        {/* Draw vertex points */}\n        {drawingPoints.map(([x, y], index) => (\n          <circle\n            key={`drawing-${index}`}\n            cx={x * imageScale.scaleX}\n            cy={y * imageScale.scaleY}\n            r={4}\n            fill=\"#FF6B6B\"\n            stroke=\"#FF4757\"\n            strokeWidth={2}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  // Render spine region as polygon within an SVG aligned to the image\n  const renderSpineRegion = (spine: SpineRegion) => {\n    const book = getBookData(spine.id);\n    const points = getScaledPoints(spine);\n    const { x: cx, y: cy } = getCentroid(spine);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const isEditing = editingState.mode === 'editing' && editingState.spineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n\n    const fill = isEditing ? 'rgba(255,107,107,0.3)' : \n                 isSelected ? 'rgba(59,130,246,0.25)' : \n                 isHovered ? 'rgba(59,130,246,0.18)' : \n                 'rgba(59,130,246,0.12)';\n    const stroke = isEditing ? '#FF6B6B' :\n                  isSelected ? '#60A5FA' : \n                  isHovered ? '#3B82F6' : \n                  '#2563EB';\n    const opacity = isOtherSelected && !isEditing ? 0.35 : 1;\n\n    return (\n      <g key={spine.id} style={{ opacity }}\n         onMouseEnter={() => handleSpineHover(spine.id)}\n         onMouseLeave={() => handleSpineHover(null)}\n         onClick={() => handleSpineClick(spine.id)}\n      >\n        <polygon points={points} fill={fill} stroke={stroke} strokeWidth={2} />\n        \n        {/* Spine number label at centroid */}\n        <text x={cx} y={cy} textAnchor=\"middle\" dominantBaseline=\"middle\" fill=\"#fff\" fontSize={12} fontWeight={600}>\n          {spineRegions.findIndex(s => s.id === spine.id) + 1}\n        </text>\n        \n        {/* Edit button for non-finalized spines */}\n        {!isFinalized && (\n          <g>\n            <circle\n              cx={cx + 20}\n              cy={cy - 20}\n              r={12}\n              fill=\"rgba(0,0,0,0.7)\"\n              stroke=\"#FF6B6B\"\n              strokeWidth={1}\n              cursor=\"pointer\"\n              onClick={(e) => {\n                e.stopPropagation();\n                startEditing(spine.id);\n              }}\n            />\n            <Edit3\n              x={cx + 20 - 6}\n              y={cy - 20 + 6}\n              size={12}\n              color=\"#FF6B6B\"\n              style={{ pointerEvents: 'none' }}\n            />\n          </g>\n        )}\n        \n        {/* Vertex handles for editing */}\n        {renderVertexHandles(spine)}\n        \n        {/* Tooltip near centroid */}\n        {hoveredSpineId === spine.id && book && overlayRect && !isEditing && (\n          <foreignObject x={Math.min(Math.max(cx + 8, 0), overlayRect.width - 200)} y={Math.max(cy - 40, 0)} width={200} height={80}>\n            <div className=\"bg-gray-900 text-white text-xs px-3 py-2 rounded-lg shadow-lg\" style={{ pointerEvents: 'none' }}>\n              <div className=\"font-medium mb-1 truncate\">{book.title}</div>\n              <div className=\"text-gray-300 truncate\">by {Array.isArray(book.author_name) ? book.author_name.join(', ') : book.author_name || 'Unknown Author'}</div>\n              {book.first_publish_year && (\n                <div className=\"text-gray-400\">{book.first_publish_year}</div>\n              )}\n            </div>\n          </foreignObject>\n        )}\n      </g>\n    );\n  };\n\n  return (\n    <div className=\"card p-0 overflow-hidden\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n              Book Spine Detection\n            </h3>\n            <p className=\"text-sm text-gray-600\">\n              {spineRegions.length} spine{spineRegions.length !== 1 ? 's' : ''} detected\n              {bookMatches.length > 0 && ` • ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`}\n            </p>\n          </div>\n          \n          {/* Editing Controls */}\n          {!isFinalized && (\n            <div className=\"flex items-center space-x-2\">\n              {editingState.mode === 'none' && (\n                <>\n                  <button\n                    onClick={startDrawing}\n                    className=\"btn-secondary text-sm px-3 py-1 flex items-center space-x-1\"\n                  >\n                    <Plus className=\"w-4 h-4\" />\n                    <span>Draw OBB</span>\n                  </button>\n                </>\n              )}\n              \n              {editingState.mode === 'drawing' && (\n                <>\n                  <button\n                    onClick={saveManualDrawing}\n                    disabled={drawingPoints.length < 3}\n                    className=\"btn-primary text-sm px-3 py-1 flex items-center space-x-1 disabled:opacity-50\"\n                  >\n                    <Save className=\"w-4 h-4\" />\n                    <span>Save OBB</span>\n                  </button>\n                  <button\n                    onClick={cancelEditing}\n                    className=\"btn-danger text-sm px-3 py-1 flex items-center space-x-1\"\n                  >\n                    <X className=\"w-4 h-4\" />\n                    <span>Cancel</span>\n                  </button>\n                </>\n              )}\n              \n              {editingState.mode === 'editing' && (\n                <>\n                  <button\n                    onClick={cancelEditing}\n                    className=\"btn-secondary text-sm px-3 py-1 flex items-center space-x-1\"\n                  >\n                    <Move className=\"w-4 h-4\" />\n                    <span>Drag vertices to edit</span>\n                  </button>\n                  <button\n                    onClick={cancelEditing}\n                    className=\"btn-primary text-sm px-3 py-1 flex items-center space-x-1\"\n                  >\n                    <Save className=\"w-4 h-4\" />\n                    <span>Done</span>\n                  </button>\n                </>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Image Container */}\n      <div \n        ref={containerRef}\n        className=\"relative bg-gray-100 min-h-[400px] flex items-center justify-center\"\n      >\n        {!imageLoaded && (\n          <div className=\"text-center text-gray-500\">\n            <BookOpen className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n            <p>Loading image...</p>\n          </div>\n        )}\n\n        {/* Main Image */}\n        <img\n          ref={imageRef}\n          src={imageUrl}\n          alt=\"Book spines\"\n          className=\"max-w-full max-h-[600px] object-contain\"\n          onLoad={() => setImageLoaded(true)}\n          onError={() => setImageLoaded(false)}\n        />\n\n        {/* Spine Regions Overlay */}\n        {imageLoaded && overlayRect && (\n          <svg\n            ref={svgRef}\n            className=\"absolute cursor-crosshair\"\n            style={{ left: overlayRect.left, top: overlayRect.top }}\n            width={overlayRect.width}\n            height={overlayRect.height}\n            onClick={handleSvgClick}\n          >\n            {spineRegions.map(renderSpineRegion)}\n            {renderDrawingPoints()}\n          </svg>\n        )}\n\n        {/* No Spines Detected */}\n        {imageLoaded && spineRegions.length === 0 && editingState.mode !== 'drawing' && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\">\n            <div className=\"text-center text-gray-500\">\n              <AlertCircle className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-lg font-medium\">No book spines detected</p>\n              <p className=\"text-sm\">Try uploading a clearer image or draw spines manually</p>\n            </div>\n          </div>\n        )}\n\n        {/* Drawing Instructions */}\n        {imageLoaded && editingState.mode === 'drawing' && (\n          <div className=\"absolute top-4 left-4 bg-blue-600 text-white px-4 py-2 rounded-lg shadow-lg\">\n            <p className=\"text-sm font-medium\">Click to add vertices. Need at least 3 points.</p>\n            <p className=\"text-xs opacity-90\">Click \"Save OBB\" when done</p>\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      {spineRegions.length > 0 && (\n        <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-500 rounded\"></div>\n                <span>Detected spine</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"></div>\n                <span>Selected</span>\n              </div>\n              {!isFinalized && (\n                <>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\n                    <span>Editing</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-red-400 rounded\"></div>\n                    <span>Drawing</span>\n                  </div>\n                </>\n              )}\n            </div>\n            \n            <div className=\"text-xs\">\n              {editingState.mode === 'none' && 'Click on spine regions to select books'}\n              {editingState.mode === 'drawing' && 'Click on image to draw spine outline'}\n              {editingState.mode === 'editing' && 'Drag red vertices to edit spine shape'}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SpineVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}