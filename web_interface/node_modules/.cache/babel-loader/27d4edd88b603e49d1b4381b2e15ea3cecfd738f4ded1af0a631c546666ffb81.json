{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\CursorWorkspace\\\\Spinecat\\\\web_interface\\\\src\\\\components\\\\SpineVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { BookOpen, AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpineVisualizer = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState(null);\n  const [imageScale, setImageScale] = useState({\n    scaleX: 1,\n    scaleY: 1,\n    offsetX: 0,\n    offsetY: 0\n  });\n  const [overlayRect, setOverlayRect] = useState(null);\n  const imageRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n\n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n\n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        setImageScale({\n          scaleX,\n          scaleY,\n          offsetX,\n          offsetY\n        });\n        setOverlayRect({\n          left: offsetX,\n          top: offsetY,\n          width: imgRect.width,\n          height: imgRect.height\n        });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Convert spine polygon to scaled SVG points string\n  const getScaledPoints = spine => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return '';\n    return spine.coordinates.map(([x, y]) => {\n      const sx = x * imageScale.scaleX;\n      const sy = y * imageScale.scaleY;\n      return `${sx},${sy}`;\n    }).join(' ');\n  };\n\n  // Compute centroid for label/tooltip positioning within overlay\n  const getCentroid = spine => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return {\n      x: 0,\n      y: 0\n    };\n    const pts = spine.coordinates;\n    const cx = pts.reduce((a, p) => a + p[0], 0) / pts.length;\n    const cy = pts.reduce((a, p) => a + p[1], 0) / pts.length;\n    return {\n      x: cx * imageScale.scaleX,\n      y: cy * imageScale.scaleY\n    };\n  };\n\n  // Helper function to get spine region by ID\n  const getSpineRegion = id => {\n    return spineRegions.find(spine => spine.id === id);\n  };\n\n  // Helper function to get book data for a spine\n  const getBookData = spineId => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = spineId => {\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = spineId => {\n    setHoveredSpineId(spineId);\n  };\n\n  // Render spine region as polygon within an SVG aligned to the image\n  const renderSpineRegion = spine => {\n    const book = getBookData(spine.id);\n    const points = getScaledPoints(spine);\n    const {\n      x: cx,\n      y: cy\n    } = getCentroid(spine);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n    const fill = isSelected ? 'rgba(59,130,246,0.25)' : isHovered ? 'rgba(59,130,246,0.18)' : 'rgba(59,130,246,0.12)';\n    const stroke = isSelected ? '#60A5FA' : isHovered ? '#3B82F6' : '#2563EB';\n    const opacity = isOtherSelected ? 0.35 : 1;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      style: {\n        opacity\n      },\n      onMouseEnter: () => handleSpineHover(spine.id),\n      onMouseLeave: () => handleSpineHover(null),\n      onClick: () => handleSpineClick(spine.id),\n      children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: points,\n        fill: fill,\n        stroke: stroke,\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: cx,\n        y: cy,\n        textAnchor: \"middle\",\n        dominantBaseline: \"middle\",\n        fill: \"#fff\",\n        fontSize: 12,\n        fontWeight: 600,\n        children: spineRegions.findIndex(s => s.id === spine.id) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), hoveredSpineId === spine.id && book && overlayRect && /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n        x: Math.min(Math.max(cx + 8, 0), overlayRect.width - 200),\n        y: Math.max(cy - 40, 0),\n        width: 200,\n        height: 80,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white text-xs px-3 py-2 rounded-lg shadow-lg\",\n          style: {\n            pointerEvents: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium mb-1 truncate\",\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300 truncate\",\n            children: [\"by \", Array.isArray(book.author_name) ? book.author_name.join(', ') : book.author_name || 'Unknown Author']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), book.first_publish_year && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400\",\n            children: book.first_publish_year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, spine.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-0 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Book Spine Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [spineRegions.length, \" spine\", spineRegions.length !== 1 ? 's' : '', \" detected\", bookMatches.length > 0 && ` â€¢ ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative bg-gray-100 min-h-[400px] flex items-center justify-center\",\n      children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: imageUrl,\n        alt: \"Book spines\",\n        className: \"max-w-full max-h-[600px] object-contain\",\n        onLoad: () => setImageLoaded(true),\n        onError: () => setImageLoaded(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), imageLoaded && overlayRect && /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"absolute\",\n        style: {\n          left: overlayRect.left,\n          top: overlayRect.top\n        },\n        width: overlayRect.width,\n        height: overlayRect.height,\n        children: spineRegions.map(renderSpineRegion)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), imageLoaded && spineRegions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"No book spines detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Try uploading a clearer image with better lighting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), spineRegions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-500 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Detected spine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs\",\n          children: \"Click on spine regions to select books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(SpineVisualizer, \"PMG1HU/IC+t0XIRr0WNqBgvu+QM=\");\n_c = SpineVisualizer;\nexport default SpineVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SpineVisualizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BookOpen","AlertCircle","jsxDEV","_jsxDEV","SpineVisualizer","imageUrl","spineRegions","bookMatches","selectedSpineId","onSpineSelected","isFinalized","_s","imageLoaded","setImageLoaded","hoveredSpineId","setHoveredSpineId","imageScale","setImageScale","scaleX","scaleY","offsetX","offsetY","overlayRect","setOverlayRect","imageRef","containerRef","current","img","container","containerRect","getBoundingClientRect","imgRect","width","naturalWidth","height","naturalHeight","left","top","getScaledPoints","spine","coordinates","length","map","x","y","sx","sy","join","getCentroid","pts","cx","reduce","a","p","cy","getSpineRegion","id","find","getBookData","spineId","book","spine_region_id","handleSpineClick","handleSpineHover","renderSpineRegion","points","isSelected","isHovered","hasSelection","isOtherSelected","fill","stroke","opacity","style","onMouseEnter","onMouseLeave","onClick","children","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","dominantBaseline","fontSize","fontWeight","findIndex","s","Math","min","max","className","pointerEvents","title","Array","isArray","author_name","first_publish_year","ref","src","alt","onLoad","onError","_c","$RefreshReg$"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/components/SpineVisualizer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BookOpen, AlertCircle } from 'lucide-react';\n\nimport { SpineRegion, BookMatch } from '../types';\n\ninterface SpineVisualizerProps {\n  imageUrl: string;\n  spineRegions: SpineRegion[];\n  bookMatches: BookMatch[];\n  selectedSpineId: string | null;\n  onSpineSelected: (spineId: string) => void;\n  isFinalized: boolean;\n}\n\nconst SpineVisualizer: React.FC<SpineVisualizerProps> = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized\n}) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState<string | null>(null);\n  const [imageScale, setImageScale] = useState({ scaleX: 1, scaleY: 1, offsetX: 0, offsetY: 0 });\n  const [overlayRect, setOverlayRect] = useState<{ left: number; top: number; width: number; height: number } | null>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      \n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n        \n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n        \n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        \n        setImageScale({ scaleX, scaleY, offsetX, offsetY });\n        setOverlayRect({ left: offsetX, top: offsetY, width: imgRect.width, height: imgRect.height });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Convert spine polygon to scaled SVG points string\n  const getScaledPoints = (spine: SpineRegion) => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return '';\n    return spine.coordinates\n      .map(([x, y]) => {\n        const sx = x * imageScale.scaleX;\n        const sy = y * imageScale.scaleY;\n        return `${sx},${sy}`;\n      })\n      .join(' ');\n  };\n\n  // Compute centroid for label/tooltip positioning within overlay\n  const getCentroid = (spine: SpineRegion) => {\n    if (!spine.coordinates || spine.coordinates.length === 0) return { x: 0, y: 0 };\n    const pts = spine.coordinates;\n    const cx = pts.reduce((a, p) => a + p[0], 0) / pts.length;\n    const cy = pts.reduce((a, p) => a + p[1], 0) / pts.length;\n    return { x: cx * imageScale.scaleX, y: cy * imageScale.scaleY };\n  };\n\n  // Helper function to get spine region by ID\n  const getSpineRegion = (id: string) => {\n    return spineRegions.find(spine => spine.id === id);\n  };\n\n  // Helper function to get book data for a spine\n  const getBookData = (spineId: string) => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = (spineId: string) => {\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = (spineId: string | null) => {\n    setHoveredSpineId(spineId);\n  };\n\n  // Render spine region as polygon within an SVG aligned to the image\n  const renderSpineRegion = (spine: SpineRegion) => {\n    const book = getBookData(spine.id);\n    const points = getScaledPoints(spine);\n    const { x: cx, y: cy } = getCentroid(spine);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n\n    const fill = isSelected ? 'rgba(59,130,246,0.25)' : isHovered ? 'rgba(59,130,246,0.18)' : 'rgba(59,130,246,0.12)';\n    const stroke = isSelected ? '#60A5FA' : isHovered ? '#3B82F6' : '#2563EB';\n    const opacity = isOtherSelected ? 0.35 : 1;\n\n    return (\n      <g key={spine.id} style={{ opacity }}\n         onMouseEnter={() => handleSpineHover(spine.id)}\n         onMouseLeave={() => handleSpineHover(null)}\n         onClick={() => handleSpineClick(spine.id)}\n      >\n        <polygon points={points} fill={fill} stroke={stroke} strokeWidth={2} />\n        {/* Spine number label at centroid */}\n        <text x={cx} y={cy} textAnchor=\"middle\" dominantBaseline=\"middle\" fill=\"#fff\" fontSize={12} fontWeight={600}>\n          {spineRegions.findIndex(s => s.id === spine.id) + 1}\n        </text>\n        {/* Tooltip near centroid */}\n        {hoveredSpineId === spine.id && book && overlayRect && (\n          <foreignObject x={Math.min(Math.max(cx + 8, 0), overlayRect.width - 200)} y={Math.max(cy - 40, 0)} width={200} height={80}>\n            <div className=\"bg-gray-900 text-white text-xs px-3 py-2 rounded-lg shadow-lg\" style={{ pointerEvents: 'none' }}>\n              <div className=\"font-medium mb-1 truncate\">{book.title}</div>\n              <div className=\"text-gray-300 truncate\">by {Array.isArray(book.author_name) ? book.author_name.join(', ') : book.author_name || 'Unknown Author'}</div>\n              {book.first_publish_year && (\n                <div className=\"text-gray-400\">{book.first_publish_year}</div>\n              )}\n            </div>\n          </foreignObject>\n        )}\n      </g>\n    );\n  };\n\n  return (\n    <div className=\"card p-0 overflow-hidden\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Book Spine Detection\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          {spineRegions.length} spine{spineRegions.length !== 1 ? 's' : ''} detected\n          {bookMatches.length > 0 && ` â€¢ ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`}\n        </p>\n      </div>\n\n      {/* Image Container */}\n      <div \n        ref={containerRef}\n        className=\"relative bg-gray-100 min-h-[400px] flex items-center justify-center\"\n      >\n        {!imageLoaded && (\n          <div className=\"text-center text-gray-500\">\n            <BookOpen className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n            <p>Loading image...</p>\n          </div>\n        )}\n\n        {/* Main Image */}\n        <img\n          ref={imageRef}\n          src={imageUrl}\n          alt=\"Book spines\"\n          className=\"max-w-full max-h-[600px] object-contain\"\n          onLoad={() => setImageLoaded(true)}\n          onError={() => setImageLoaded(false)}\n        />\n\n        {/* Spine Regions Overlay */}\n        {imageLoaded && overlayRect && (\n          <svg\n            className=\"absolute\"\n            style={{ left: overlayRect.left, top: overlayRect.top }}\n            width={overlayRect.width}\n            height={overlayRect.height}\n          >\n            {spineRegions.map(renderSpineRegion)}\n          </svg>\n        )}\n\n        {/* No Spines Detected */}\n        {imageLoaded && spineRegions.length === 0 && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\">\n            <div className=\"text-center text-gray-500\">\n              <AlertCircle className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-lg font-medium\">No book spines detected</p>\n              <p className=\"text-sm\">Try uploading a clearer image with better lighting</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      {spineRegions.length > 0 && (\n        <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-500 rounded\"></div>\n                <span>Detected spine</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"></div>\n                <span>Selected</span>\n              </div>\n            </div>\n            \n            <div className=\"text-xs\">\n              Click on spine regions to select books\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SpineVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}