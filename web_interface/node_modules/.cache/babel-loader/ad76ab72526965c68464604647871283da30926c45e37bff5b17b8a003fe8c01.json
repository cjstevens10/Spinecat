{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\CursorWorkspace\\\\Spinecat\\\\web_interface\\\\src\\\\components\\\\ImageUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-hot-toast';\nimport { motion } from 'framer-motion';\nimport { Upload, Image, AlertCircle } from 'lucide-react';\nimport { apiService } from '../services/api';\nimport { validateImage } from '../utils/imageUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploader = ({\n  onImageProcessed,\n  onProcessingStateChange\n}) => {\n  _s();\n  const eventSourceRef = useRef(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const disconnectEventSource = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  }, []);\n\n  // Cleanup EventSource on unmount\n  const connectEventSource = useCallback(() => {\n    // Close any existing connection first\n    if (eventSourceRef.current) {\n      console.log('üîÑ Closing existing EventSource connection...');\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n    console.log('üîå Connecting to EventSource...');\n    return new Promise((resolve, reject) => {\n      const eventSource = new EventSource('http://127.0.0.1:8002/api/progress');\n\n      // Set a timeout for connection\n      const connectionTimeout = setTimeout(() => {\n        reject(new Error('EventSource connection timeout'));\n      }, 5000);\n      eventSource.onopen = () => {\n        clearTimeout(connectionTimeout);\n        console.log('‚úÖ EventSource connected for progress updates');\n        setConnectionStatus('connected');\n        resolve();\n      };\n\n      // Add connection health check\n      const healthCheck = setInterval(() => {\n        if (eventSource.readyState === EventSource.CLOSED) {\n          clearInterval(healthCheck);\n          console.log('üîå EventSource connection lost, attempting to reconnect...');\n          if (eventSourceRef.current === eventSource) {\n            setTimeout(() => {\n              reconnectEventSource();\n            }, 1000);\n          }\n        }\n      }, 1000); // Check more frequently\n\n      eventSource.onmessage = event => {\n        console.log('üì® EventSource message received:', event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log('üîç Parsed data:', data);\n          if (data.type === 'progress') {\n            console.log('üîÑ Progress update received:', data.progress, data.message);\n            // Only update if it's not the initial \"Connected to progress stream\" message\n            if (data.message !== 'Connected to progress stream') {\n              console.log('‚úÖ Updating progress to:', data.progress, data.message);\n              onProcessingStateChange({\n                status: 'processing',\n                progress: data.progress,\n                message: data.message\n              });\n            } else {\n              console.log('‚è≠Ô∏è Skipping initial connection message');\n            }\n          } else {\n            console.log('‚ö†Ô∏è Unknown message type:', data.type);\n          }\n        } catch (error) {\n          console.error('‚ùå Failed to parse EventSource message:', error);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('‚ùå EventSource error:', error);\n        console.error('‚ùå EventSource readyState:', eventSource.readyState);\n        console.error('‚ùå EventSource URL:', eventSource.url);\n        // Don't reject here, just log the error\n      };\n      eventSourceRef.current = eventSource;\n    });\n  }, [onProcessingStateChange]);\n\n  // Add automatic reconnection logic\n  const reconnectEventSource = useCallback(async () => {\n    try {\n      console.log('üîÑ Attempting to reconnect EventSource...');\n      await connectEventSource();\n      console.log('‚úÖ EventSource reconnected successfully');\n    } catch (error) {\n      console.error('‚ùå Failed to reconnect EventSource:', error);\n      // Try again after a delay\n      setTimeout(() => {\n        reconnectEventSource();\n      }, 2000);\n    }\n  }, [connectEventSource]);\n\n  // Connect to EventSource immediately when component loads\n  useEffect(() => {\n    const initConnection = async () => {\n      await connectEventSource();\n    };\n    initConnection();\n    return () => {\n      disconnectEventSource();\n    };\n  }, [connectEventSource, disconnectEventSource]);\n  const onDrop = useCallback(async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // Validate image\n    const validation = await validateImage(file);\n    if (!validation.isValid) {\n      toast.error(validation.errors.join(', '));\n      return;\n    }\n    try {\n      // Ensure EventSource is connected before starting processing\n      try {\n        await connectEventSource();\n        console.log('‚úÖ EventSource ready for progress updates');\n      } catch (error) {\n        console.warn('‚ö†Ô∏è EventSource connection failed, continuing without real-time updates:', error);\n        // Continue processing even if SSE fails\n      }\n\n      // Show initial progress\n      onProcessingStateChange({\n        status: 'processing',\n        progress: 20,\n        message: 'Detecting book spines with YOLO...'\n      });\n\n      // First test the connection\n      console.log('üß™ Testing API connection first...');\n      await apiService.testConnection(file);\n      console.log('‚úÖ API connection test passed!');\n\n      // Start processing image through the API (don't await - let it run in background)\n      console.log('üöÄ Starting image processing...');\n      apiService.processImage(file).then(result => {\n        console.log('‚úÖ Image processing completed:', result);\n        onImageProcessed(result);\n        toast.success(`Successfully processed ${result.total_spines || 0} spines!`);\n\n        // Wait a bit for final progress update, then disconnect\n        setTimeout(() => {\n          onProcessingStateChange({\n            status: 'completed',\n            progress: 100,\n            message: `Processing complete! Found ${result.total_spines || 0} spines with ${result.successful_matches || 0} successful matches.`\n          });\n          disconnectEventSource();\n        }, 1000);\n      }).catch(error => {\n        console.error('‚ùå Image processing failed:', error);\n        onProcessingStateChange({\n          status: 'error',\n          progress: 0,\n          message: 'Processing failed',\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n        toast.error('Failed to process image');\n        disconnectEventSource();\n      });\n    } catch (error) {\n      console.error('Processing error:', error);\n      onProcessingStateChange({\n        status: 'error',\n        progress: 0,\n        message: 'Processing failed',\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      toast.error('Failed to process image');\n\n      // Disconnect EventSource after error\n      disconnectEventSource();\n    }\n  }, [onImageProcessed, onProcessingStateChange, connectEventSource, disconnectEventSource]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/jpeg': ['.jpg', '.jpeg']\n    },\n    maxFiles: 1,\n    disabled: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.3\n      },\n      className: \"text-center mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold text-white mb-4\",\n        children: \"Upload Book Spine Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-slate-300 max-w-2xl mx-auto leading-relaxed\",\n        children: \"Upload a high-quality image of book spines to automatically detect and identify books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex items-center justify-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${connectionStatus === 'connected' ? 'bg-green-500' : connectionStatus === 'connecting' ? 'bg-yellow-500' : connectionStatus === 'error' ? 'bg-red-500' : 'bg-gray-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-sm ${connectionStatus === 'connected' ? 'text-green-400' : connectionStatus === 'connecting' ? 'text-yellow-400' : connectionStatus === 'error' ? 'text-red-400' : 'text-gray-400'}`,\n          children: connectionStatus === 'connected' ? 'Real-time updates connected' : connectionStatus === 'connecting' ? 'Connecting to updates...' : connectionStatus === 'error' ? 'Connection error' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        scale: 0.95\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.3,\n        delay: 0.2\n      },\n      className: \"bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `\n            border-2 border-dashed rounded-2xl p-16 text-center cursor-pointer transition-all duration-200\n            ${isDragActive && !isDragReject ? 'border-blue-400 bg-blue-500/10' : isDragReject ? 'border-red-400 bg-red-500/10' : 'border-slate-400 hover:border-blue-400 hover:bg-blue-500/5'}\n            ${false ? 'opacity-50 cursor-not-allowed' : ''}\n          `,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: false ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-pulse\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-16 bg-primary-200 rounded-full mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-primary-600 font-medium\",\n              children: \"Processing image...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-16 mx-auto mb-4\",\n              children: isDragActive && !isDragReject ? /*#__PURE__*/_jsxDEV(Upload, {\n                className: \"w-16 h-16 text-primary-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this) : isDragReject ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"w-16 h-16 text-error-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Image, {\n                className: \"w-16 h-16 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-medium text-white mb-2\",\n                children: isDragActive && !isDragReject ? 'Drop the image here' : isDragReject ? 'Invalid file type' : 'Drag & drop an image here'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-slate-300\",\n                children: \"or click to select a file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-slate-400 mt-2\",\n                children: \"Only JPG images are supported\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.3,\n        delay: 0.4\n      },\n      className: \"mt-12 grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-lg font-bold\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-white mb-2\",\n          children: \"High Resolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-300 text-sm\",\n          children: \"Clear, sharp images work best\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 bg-indigo-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-lg font-bold\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-white mb-2\",\n          children: \"Good Lighting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-300 text-sm\",\n          children: \"Well-lit spines for better OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 bg-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-lg font-bold\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-white mb-2\",\n          children: \"JPG Format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-300 text-sm\",\n          children: \"Only JPEG images supported\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"YO6C5d6141iid7D8QkwAnhvHzzk=\", false, function () {\n  return [useDropzone];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useCallback","useRef","useEffect","useState","useDropzone","toast","motion","Upload","Image","AlertCircle","apiService","validateImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploader","onImageProcessed","onProcessingStateChange","_s","eventSourceRef","connectionStatus","setConnectionStatus","disconnectEventSource","current","close","connectEventSource","console","log","Promise","resolve","reject","eventSource","EventSource","connectionTimeout","setTimeout","Error","onopen","clearTimeout","healthCheck","setInterval","readyState","CLOSED","clearInterval","reconnectEventSource","onmessage","event","data","JSON","parse","type","progress","message","status","error","onerror","url","initConnection","onDrop","acceptedFiles","length","file","validation","isValid","errors","join","warn","testConnection","processImage","then","result","success","total_spines","successful_matches","catch","getRootProps","getInputProps","isDragActive","isDragReject","accept","maxFiles","disabled","className","children","div","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","scale","delay","_c","$RefreshReg$"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/components/ImageUploader.tsx"],"sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-hot-toast';\nimport { motion } from 'framer-motion';\nimport { Upload, Image, AlertCircle } from 'lucide-react';\nimport { ProcessingState, ProcessingResult } from '../types';\nimport { apiService } from '../services/api';\nimport { validateImage } from '../utils/imageUtils';\n\ninterface ImageUploaderProps {\n  onImageProcessed: (result: ProcessingResult) => void;\n  onProcessingStateChange: (state: ProcessingState) => void;\n}\n\nconst ImageUploader: React.FC<ImageUploaderProps> = ({ onImageProcessed, onProcessingStateChange }) => {\n  const eventSourceRef = useRef<EventSource | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'disconnected' | 'error'>('disconnected');\n\n  const disconnectEventSource = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  }, []);\n\n  // Cleanup EventSource on unmount\n  const connectEventSource = useCallback(() => {\n    // Close any existing connection first\n    if (eventSourceRef.current) {\n      console.log('üîÑ Closing existing EventSource connection...');\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n\n    console.log('üîå Connecting to EventSource...');\n    return new Promise<void>((resolve, reject) => {\n      const eventSource = new EventSource('http://127.0.0.1:8002/api/progress');\n      \n      // Set a timeout for connection\n      const connectionTimeout = setTimeout(() => {\n        reject(new Error('EventSource connection timeout'));\n      }, 5000);\n      \n      eventSource.onopen = () => {\n        clearTimeout(connectionTimeout);\n        console.log('‚úÖ EventSource connected for progress updates');\n        setConnectionStatus('connected');\n        resolve();\n      };\n\n      // Add connection health check\n      const healthCheck = setInterval(() => {\n        if (eventSource.readyState === EventSource.CLOSED) {\n          clearInterval(healthCheck);\n          console.log('üîå EventSource connection lost, attempting to reconnect...');\n          if (eventSourceRef.current === eventSource) {\n            setTimeout(() => {\n              reconnectEventSource();\n            }, 1000);\n          }\n        }\n      }, 1000); // Check more frequently\n\n          eventSource.onmessage = (event) => {\n        console.log('üì® EventSource message received:', event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log('üîç Parsed data:', data);\n          if (data.type === 'progress') {\n            console.log('üîÑ Progress update received:', data.progress, data.message);\n            // Only update if it's not the initial \"Connected to progress stream\" message\n            if (data.message !== 'Connected to progress stream') {\n              console.log('‚úÖ Updating progress to:', data.progress, data.message);\n              onProcessingStateChange({\n                status: 'processing',\n                progress: data.progress,\n                message: data.message\n              });\n            } else {\n              console.log('‚è≠Ô∏è Skipping initial connection message');\n            }\n          } else {\n            console.log('‚ö†Ô∏è Unknown message type:', data.type);\n          }\n        } catch (error) {\n          console.error('‚ùå Failed to parse EventSource message:', error);\n        }\n      };\n\n      eventSource.onerror = (error) => {\n        console.error('‚ùå EventSource error:', error);\n        console.error('‚ùå EventSource readyState:', eventSource.readyState);\n        console.error('‚ùå EventSource URL:', eventSource.url);\n        // Don't reject here, just log the error\n      };\n\n      eventSourceRef.current = eventSource;\n    });\n  }, [onProcessingStateChange]);\n\n  // Add automatic reconnection logic\n  const reconnectEventSource = useCallback(async () => {\n    try {\n      console.log('üîÑ Attempting to reconnect EventSource...');\n      await connectEventSource();\n      console.log('‚úÖ EventSource reconnected successfully');\n    } catch (error) {\n      console.error('‚ùå Failed to reconnect EventSource:', error);\n      // Try again after a delay\n      setTimeout(() => {\n        reconnectEventSource();\n      }, 2000);\n    }\n  }, [connectEventSource]);\n\n  // Connect to EventSource immediately when component loads\n  useEffect(() => {\n    const initConnection = async () => {\n      await connectEventSource();\n    };\n    initConnection();\n    \n    return () => {\n      disconnectEventSource();\n    };\n  }, [connectEventSource, disconnectEventSource]);\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    \n    // Validate image\n    const validation = await validateImage(file);\n    \n    if (!validation.isValid) {\n      toast.error(validation.errors.join(', '));\n      return;\n    }\n\n    \n    try {\n      // Ensure EventSource is connected before starting processing\n      try {\n        await connectEventSource();\n        console.log('‚úÖ EventSource ready for progress updates');\n      } catch (error) {\n        console.warn('‚ö†Ô∏è EventSource connection failed, continuing without real-time updates:', error);\n        // Continue processing even if SSE fails\n      }\n      \n      // Show initial progress\n      onProcessingStateChange({\n        status: 'processing',\n        progress: 20,\n        message: 'Detecting book spines with YOLO...'\n      });\n\n      // First test the connection\n      console.log('üß™ Testing API connection first...');\n      await apiService.testConnection(file);\n      console.log('‚úÖ API connection test passed!');\n      \n      // Start processing image through the API (don't await - let it run in background)\n      console.log('üöÄ Starting image processing...');\n      apiService.processImage(file)\n        .then(result => {\n          console.log('‚úÖ Image processing completed:', result);\n          onImageProcessed(result);\n          toast.success(`Successfully processed ${result.total_spines || 0} spines!`);\n          \n          // Wait a bit for final progress update, then disconnect\n          setTimeout(() => {\n            onProcessingStateChange({\n              status: 'completed',\n              progress: 100,\n              message: `Processing complete! Found ${result.total_spines || 0} spines with ${result.successful_matches || 0} successful matches.`\n            });\n            disconnectEventSource();\n          }, 1000);\n        })\n        .catch(error => {\n          console.error('‚ùå Image processing failed:', error);\n          onProcessingStateChange({\n            status: 'error',\n            progress: 0,\n            message: 'Processing failed',\n            error: error instanceof Error ? error.message : 'Unknown error'\n          });\n          toast.error('Failed to process image');\n          disconnectEventSource();\n        });\n      \n    } catch (error) {\n      console.error('Processing error:', error);\n      onProcessingStateChange({\n        status: 'error',\n        progress: 0,\n        message: 'Processing failed',\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      toast.error('Failed to process image');\n      \n      // Disconnect EventSource after error\n      disconnectEventSource();\n    }\n  }, [onImageProcessed, onProcessingStateChange, connectEventSource, disconnectEventSource]);\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject } = useDropzone({\n    onDrop,\n    accept: {\n      'image/jpeg': ['.jpg', '.jpeg']\n    },\n    maxFiles: 1,\n    disabled: false\n  });\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"text-center mb-12\"\n      >\n        <h2 className=\"text-4xl font-bold text-white mb-4\">\n          Upload Book Spine Image\n        </h2>\n        <p className=\"text-lg text-slate-300 max-w-2xl mx-auto leading-relaxed\">\n          Upload a high-quality image of book spines to automatically detect and identify books\n        </p>\n        \n        {/* Connection Status */}\n        <div className=\"mt-4 flex items-center justify-center space-x-2\">\n          <div className={`w-3 h-3 rounded-full ${\n            connectionStatus === 'connected' ? 'bg-green-500' :\n            connectionStatus === 'connecting' ? 'bg-yellow-500' :\n            connectionStatus === 'error' ? 'bg-red-500' :\n            'bg-gray-500'\n          }`}></div>\n          <span className={`text-sm ${\n            connectionStatus === 'connected' ? 'text-green-400' :\n            connectionStatus === 'connecting' ? 'text-yellow-400' :\n            connectionStatus === 'error' ? 'text-red-400' :\n            'text-gray-400'\n          }`}>\n            {connectionStatus === 'connected' ? 'Real-time updates connected' :\n             connectionStatus === 'connecting' ? 'Connecting to updates...' :\n             connectionStatus === 'error' ? 'Connection error' :\n             'Disconnected'}\n          </span>\n        </div>\n      </motion.div>\n\n      {/* Upload Area */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.95 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.3, delay: 0.2 }}\n        className=\"bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\"\n      >\n        <div\n          {...getRootProps()}\n          className={`\n            border-2 border-dashed rounded-2xl p-16 text-center cursor-pointer transition-all duration-200\n            ${isDragActive && !isDragReject\n              ? 'border-blue-400 bg-blue-500/10'\n              : isDragReject\n              ? 'border-red-400 bg-red-500/10'\n              : 'border-slate-400 hover:border-blue-400 hover:bg-blue-500/5'\n            }\n            ${false ? 'opacity-50 cursor-not-allowed' : ''}\n          `}\n        >\n          <input {...getInputProps()} />\n          \n          <div className=\"space-y-4\">\n            {false ? (\n              <div className=\"animate-pulse\">\n                <div className=\"w-16 h-16 bg-primary-200 rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-primary-600 font-medium\">Processing image...</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"w-16 h-16 mx-auto mb-4\">\n                  {isDragActive && !isDragReject ? (\n                    <Upload className=\"w-16 h-16 text-primary-500\" />\n                  ) : isDragReject ? (\n                    <AlertCircle className=\"w-16 h-16 text-error-500\" />\n                  ) : (\n                    <Image className=\"w-16 h-16 text-gray-400\" />\n                  )}\n                </div>\n                \n                <div>\n                  <p className=\"text-lg font-medium text-white mb-2\">\n                    {isDragActive && !isDragReject\n                      ? 'Drop the image here'\n                      : isDragReject\n                      ? 'Invalid file type'\n                      : 'Drag & drop an image here'\n                    }\n                  </p>\n                  <p className=\"text-slate-300\">\n                    or click to select a file\n                  </p>\n                  <p className=\"text-sm text-slate-400 mt-2\">\n                    Only JPG images are supported\n                  </p>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Validation Result */}\n      {/* validationResult was removed, so this block is always null */}\n      {/* {validationResult && ( */}\n      {/*   <motion.div */}\n      {/*     initial={{ opacity: 0, y: 10 }} */}\n      {/*     animate={{ opacity: 1, y: 0 }} */}\n      {/*     transition={{ duration: 0.3 }} */}\n      {/*     className=\"mt-6\" */}\n      {/*   > */}\n      {/*     {validationResult.isValid ? ( */}\n      {/*       <div className=\"flex items-center justify-center space-x-2 text-success-600\"> */}\n      {/*         <CheckCircle className=\"h-5 w-5\" /> */}\n      {/*         <span>Image validation passed</span> */}\n      {/*       </div> */}\n      {/*     ) : ( */}\n      {/*       <div className=\"flex items-center justify-center space-x-2 text-error-600\"> */}\n      {/*         <AlertCircle className=\"h-5 w-5\" /> */}\n      {/*         <span>Image validation failed</span> */}\n      {/*       </div> */}\n      {/*     )} */}\n      {/*   </motion.div> */}\n      {/* )} */}\n\n      {/* Requirements */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3, delay: 0.4 }}\n        className=\"mt-12 grid grid-cols-1 md:grid-cols-3 gap-6\"\n      >\n        <div className=\"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\">\n          <div className=\"w-12 h-12 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\">\n            <span className=\"text-white text-lg font-bold\">1</span>\n          </div>\n          <h3 className=\"font-semibold text-white mb-2\">High Resolution</h3>\n          <p className=\"text-slate-300 text-sm\">Clear, sharp images work best</p>\n        </div>\n        \n        <div className=\"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\">\n          <div className=\"w-12 h-12 bg-indigo-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\">\n            <span className=\"text-white text-lg font-bold\">2</span>\n          </div>\n          <h3 className=\"font-semibold text-white mb-2\">Good Lighting</h3>\n          <p className=\"text-slate-300 text-sm\">Well-lit spines for better OCR</p>\n        </div>\n        \n        <div className=\"text-center p-6 bg-slate-800/30 backdrop-blur-sm rounded-2xl border border-slate-600/50 shadow-lg\">\n          <div className=\"w-12 h-12 bg-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-md\">\n            <span className=\"text-white text-lg font-bold\">3</span>\n          </div>\n          <h3 className=\"font-semibold text-white mb-2\">JPG Format</h3>\n          <p className=\"text-slate-300 text-sm\">Only JPEG images supported</p>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ImageUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}