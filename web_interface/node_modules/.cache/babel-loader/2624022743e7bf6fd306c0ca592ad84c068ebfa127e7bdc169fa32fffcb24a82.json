{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\CursorWorkspace\\\\Spinecat\\\\web_interface\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Settings } from 'lucide-react';\nimport { apiService } from './services/api';\nimport ImageUploader from './components/ImageUploader';\nimport SpineVisualizer from './components/SpineVisualizer';\nimport BookListManager from './components/BookListManager';\nimport ProcessingStatus from './components/ProcessingStatus';\nimport FinalizePanel from './components/FinalizePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [processingState, setProcessingState] = useState({\n    status: 'idle',\n    progress: 0,\n    message: 'Ready to process images'\n  });\n  const [processingResult, setProcessingResult] = useState(null);\n  const [selectedSpineId, setSelectedSpineId] = useState(null);\n  const [isFinalized, setIsFinalized] = useState(false);\n  const [currentTaskId, setCurrentTaskId] = useState(null);\n\n  // Progress polling for current task\n  useEffect(() => {\n    let intervalId;\n    if (processingState.status === 'processing' && currentTaskId) {\n      console.log('🔄 App: Starting progress polling for task:', currentTaskId);\n      intervalId = setInterval(async () => {\n        try {\n          const data = await apiService.getProgress(currentTaskId);\n          console.log('📡 App: Polled progress:', data);\n          setProcessingState(prev => ({\n            ...prev,\n            status: data.status === 'completed' ? 'completed' : 'processing',\n            progress: data.progress,\n            message: data.message\n          }));\n\n          // If task is completed, fetch the result\n          if (data.status === 'completed') {\n            try {\n              var _result$book_matches, _result$spine_regions, _result$ocr_failures;\n              const result = await apiService.getResult(currentTaskId);\n              console.log('✅ App: Got result:', result);\n              console.log('🔍 App: Result structure:', {\n                total_spines: result.total_spines,\n                successful_matches: result.successful_matches,\n                book_matches_length: (_result$book_matches = result.book_matches) === null || _result$book_matches === void 0 ? void 0 : _result$book_matches.length,\n                spine_regions_length: (_result$spine_regions = result.spine_regions) === null || _result$spine_regions === void 0 ? void 0 : _result$spine_regions.length,\n                ocr_failures_length: (_result$ocr_failures = result.ocr_failures) === null || _result$ocr_failures === void 0 ? void 0 : _result$ocr_failures.length\n              });\n              if (result.book_matches && result.book_matches.length > 0) {\n                console.log('🔍 App: First book match:', result.book_matches[0]);\n              }\n              setProcessingResult(result);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'completed',\n                progress: 100,\n                message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n              }));\n            } catch (error) {\n              console.error('❌ App: Failed to get result:', error);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'error',\n                message: 'Failed to get processing result'\n              }));\n            }\n          }\n        } catch (error) {\n          console.error('❌ App: Failed to poll progress:', error);\n        }\n      }, 200); // Poll every 200ms\n    }\n    return () => {\n      if (intervalId) {\n        console.log('🔄 App: Stopping progress polling...');\n        clearInterval(intervalId);\n      }\n    };\n  }, [processingState.status, currentTaskId]);\n  const handleImageProcessed = result => {\n    setProcessingResult(result);\n    setProcessingState({\n      status: 'completed',\n      progress: 100,\n      message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n    });\n  };\n  const handleImageUpload = async file => {\n    try {\n      setProcessingState({\n        status: 'processing',\n        progress: 0,\n        message: 'Starting image processing...'\n      });\n\n      // Start the processing task\n      const {\n        task_id\n      } = await apiService.startProcess(file);\n      setCurrentTaskId(task_id);\n      console.log('🚀 App: Started task:', task_id);\n    } catch (error) {\n      console.error('❌ App: Failed to start processing:', error);\n      setProcessingState({\n        status: 'error',\n        progress: 0,\n        message: `Failed to start processing: ${error instanceof Error ? error.message : 'Unknown error'}`\n      });\n    }\n  };\n  const handleReset = () => {\n    setProcessingState({\n      status: 'idle',\n      progress: 0,\n      message: 'Ready to process images'\n    });\n    setProcessingResult(null);\n    setSelectedSpineId(null);\n    setIsFinalized(false);\n    setCurrentTaskId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-slate-800/50 backdrop-blur-sm border-b border-slate-700/50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-semibold text-slate-200\",\n            children: \"Book Spine Analyzer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.open('http://127.0.0.1:8002/docs', '_blank'),\n              className: \"flex items-center space-x-2 px-3 py-2 text-sm text-slate-300 hover:text-white hover:bg-slate-700/50 rounded-md transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Settings, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"API Docs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: [processingState.status === 'idle' && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageUploader, {\n            onImageUpload: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, \"upload\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), processingState.status === 'processing' && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(ProcessingStatus, {\n            state: processingState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, \"processing\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), processingState.status === 'completed' && processingResult && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-3xl font-bold text-slate-100 mb-2\",\n                children: \"Analysis Complete!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-slate-400\",\n                children: [\"Found \", processingResult.total_spines, \" spines with \", processingResult.successful_matches, \" successful matches\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleReset,\n                className: \"mt-4 px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\",\n                children: \"Process Another Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold text-slate-200\",\n                  children: \"Detected Spines\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SpineVisualizer, {\n                  imageUrl: processingResult.image_url,\n                  spineRegions: processingResult.spine_regions,\n                  bookMatches: processingResult.book_matches,\n                  selectedSpineId: selectedSpineId,\n                  onSpineSelected: setSelectedSpineId,\n                  isFinalized: isFinalized\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-xl font-semibold text-slate-200\",\n                  children: \"Identified Books\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(BookListManager, {\n                  bookMatches: processingResult.book_matches,\n                  ocrFailures: processingResult.ocr_failures,\n                  selectedSpineId: selectedSpineId,\n                  onSpineSelected: setSelectedSpineId,\n                  onBookListUpdated: updatedMatches => {\n                    setProcessingResult(prev => prev ? {\n                      ...prev,\n                      book_matches: updatedMatches\n                    } : null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FinalizePanel, {\n              processingResult: processingResult,\n              onUnfinalize: () => setIsFinalized(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, \"results\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), processingState.status === 'error' && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-red-400 mb-4\",\n              children: \"Processing Failed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-slate-300 mb-6\",\n              children: processingState.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              className: \"px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\",\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, \"error\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vFox1F+jFDWZhN1DlHty0UzV1i0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Toaster","motion","AnimatePresence","Settings","apiService","ImageUploader","SpineVisualizer","BookListManager","ProcessingStatus","FinalizePanel","jsxDEV","_jsxDEV","App","_s","processingState","setProcessingState","status","progress","message","processingResult","setProcessingResult","selectedSpineId","setSelectedSpineId","isFinalized","setIsFinalized","currentTaskId","setCurrentTaskId","intervalId","console","log","setInterval","data","getProgress","prev","_result$book_matches","_result$spine_regions","_result$ocr_failures","result","getResult","total_spines","successful_matches","book_matches_length","book_matches","length","spine_regions_length","spine_regions","ocr_failures_length","ocr_failures","error","clearInterval","handleImageProcessed","handleImageUpload","file","task_id","startProcess","Error","handleReset","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","mode","div","initial","opacity","y","animate","exit","transition","duration","onImageUpload","state","imageUrl","image_url","spineRegions","bookMatches","onSpineSelected","ocrFailures","onBookListUpdated","updatedMatches","onUnfinalize","_c","$RefreshReg$"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Settings, Download } from 'lucide-react';\n\nimport { ProcessingState, ProcessingResult } from './types';\nimport { apiService } from './services/api';\nimport ImageUploader from './components/ImageUploader';\nimport SpineVisualizer from './components/SpineVisualizer';\nimport BookListManager from './components/BookListManager';\nimport ProcessingStatus from './components/ProcessingStatus';\nimport FinalizePanel from './components/FinalizePanel';\n\nconst App: React.FC = () => {\n  const [processingState, setProcessingState] = useState<ProcessingState>({\n    status: 'idle',\n    progress: 0,\n    message: 'Ready to process images'\n  });\n  \n  const [processingResult, setProcessingResult] = useState<ProcessingResult | null>(null);\n  const [selectedSpineId, setSelectedSpineId] = useState<string | null>(null);\n  const [isFinalized, setIsFinalized] = useState(false);\n  const [currentTaskId, setCurrentTaskId] = useState<string | null>(null);\n  \n  // Progress polling for current task\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n    \n    if (processingState.status === 'processing' && currentTaskId) {\n      console.log('🔄 App: Starting progress polling for task:', currentTaskId);\n      intervalId = setInterval(async () => {\n        try {\n          const data = await apiService.getProgress(currentTaskId);\n          console.log('📡 App: Polled progress:', data);\n          \n          setProcessingState(prev => ({\n            ...prev,\n            status: data.status === 'completed' ? 'completed' : 'processing',\n            progress: data.progress,\n            message: data.message\n          }));\n          \n          // If task is completed, fetch the result\n          if (data.status === 'completed') {\n            try {\n              const result = await apiService.getResult(currentTaskId);\n              console.log('✅ App: Got result:', result);\n              console.log('🔍 App: Result structure:', {\n                total_spines: result.total_spines,\n                successful_matches: result.successful_matches,\n                book_matches_length: result.book_matches?.length,\n                spine_regions_length: result.spine_regions?.length,\n                ocr_failures_length: result.ocr_failures?.length\n              });\n              if (result.book_matches && result.book_matches.length > 0) {\n                console.log('🔍 App: First book match:', result.book_matches[0]);\n              }\n              setProcessingResult(result);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'completed',\n                progress: 100,\n                message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n              }));\n            } catch (error) {\n              console.error('❌ App: Failed to get result:', error);\n              setProcessingState(prev => ({\n                ...prev,\n                status: 'error',\n                message: 'Failed to get processing result'\n              }));\n            }\n          }\n          \n        } catch (error) {\n          console.error('❌ App: Failed to poll progress:', error);\n        }\n      }, 200); // Poll every 200ms\n    }\n\n    return () => {\n      if (intervalId) {\n        console.log('🔄 App: Stopping progress polling...');\n        clearInterval(intervalId);\n      }\n    };\n  }, [processingState.status, currentTaskId]);\n\n  const handleImageProcessed = (result: ProcessingResult) => {\n    setProcessingResult(result);\n    setProcessingState({\n      status: 'completed',\n      progress: 100,\n      message: `Processed ${result.total_spines} spines with ${result.successful_matches} successful matches`\n    });\n  };\n\n  const handleImageUpload = async (file: File) => {\n    try {\n      setProcessingState({\n        status: 'processing',\n        progress: 0,\n        message: 'Starting image processing...'\n      });\n\n      // Start the processing task\n      const { task_id } = await apiService.startProcess(file);\n      setCurrentTaskId(task_id);\n      console.log('🚀 App: Started task:', task_id);\n\n    } catch (error) {\n      console.error('❌ App: Failed to start processing:', error);\n      setProcessingState({\n        status: 'error',\n        progress: 0,\n        message: `Failed to start processing: ${error instanceof Error ? error.message : 'Unknown error'}`\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setProcessingState({\n      status: 'idle',\n      progress: 0,\n      message: 'Ready to process images'\n    });\n    setProcessingResult(null);\n    setSelectedSpineId(null);\n    setIsFinalized(false);\n    setCurrentTaskId(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white\">\n      <Toaster position=\"top-right\" />\n      \n      {/* Header */}\n      <header className=\"bg-slate-800/50 backdrop-blur-sm border-b border-slate-700/50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <h1 className=\"text-xl font-semibold text-slate-200\">\n              Book Spine Analyzer\n            </h1>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => window.open('http://127.0.0.1:8002/docs', '_blank')}\n                className=\"flex items-center space-x-2 px-3 py-2 text-sm text-slate-300 hover:text-white hover:bg-slate-700/50 rounded-md transition-colors\"\n              >\n                <Settings className=\"w-4 h-4\" />\n                <span>API Docs</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <AnimatePresence mode=\"wait\">\n          {processingState.status === 'idle' && (\n            <motion.div\n              key=\"upload\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <ImageUploader onImageUpload={handleImageUpload} />\n            </motion.div>\n          )}\n\n          {processingState.status === 'processing' && (\n            <motion.div\n              key=\"processing\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <ProcessingStatus state={processingState} />\n            </motion.div>\n          )}\n\n          {processingState.status === 'completed' && processingResult && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-8\">\n                {/* Results Header */}\n                <div className=\"text-center\">\n                  <h2 className=\"text-3xl font-bold text-slate-100 mb-2\">\n                    Analysis Complete!\n                  </h2>\n                  <p className=\"text-slate-400\">\n                    Found {processingResult.total_spines} spines with {processingResult.successful_matches} successful matches\n                  </p>\n                  <button\n                    onClick={handleReset}\n                    className=\"mt-4 px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\"\n                  >\n                    Process Another Image\n                  </button>\n                </div>\n\n                {/* Main Results Grid */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {/* Image with Spine Overlays */}\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-slate-200\">Detected Spines</h3>\n                    <SpineVisualizer\n                      imageUrl={processingResult.image_url}\n                      spineRegions={processingResult.spine_regions}\n                      bookMatches={processingResult.book_matches}\n                      selectedSpineId={selectedSpineId}\n                      onSpineSelected={setSelectedSpineId}\n                      isFinalized={isFinalized}\n                    />\n                  </div>\n\n                  {/* Book Matches and Management */}\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-slate-200\">Identified Books</h3>\n                    <BookListManager\n                      bookMatches={processingResult.book_matches}\n                      ocrFailures={processingResult.ocr_failures}\n                      selectedSpineId={selectedSpineId}\n                      onSpineSelected={setSelectedSpineId}\n                      onBookListUpdated={(updatedMatches) => {\n                        setProcessingResult(prev => prev ? {\n                          ...prev,\n                          book_matches: updatedMatches\n                        } : null);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* Finalize Panel */}\n                <FinalizePanel\n                  processingResult={processingResult}\n                  onUnfinalize={() => setIsFinalized(false)}\n                />\n              </div>\n            </motion.div>\n          )}\n\n          {processingState.status === 'error' && (\n            <motion.div\n              key=\"error\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold text-red-400 mb-4\">\n                  Processing Failed\n                </h2>\n                <p className=\"text-slate-300 mb-6\">\n                  {processingState.message}\n                </p>\n                <button\n                  onClick={handleReset}\n                  className=\"px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white rounded-lg transition-colors\"\n                >\n                  Try Again\n                </button>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}