{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\CursorWorkspace\\\\Spinecat\\\\web_interface\\\\src\\\\components\\\\SpineVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BookOpen, AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpineVisualizer = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState(null);\n  const [imageScale, setImageScale] = useState({\n    scaleX: 1,\n    scaleY: 1,\n    offsetX: 0,\n    offsetY: 0\n  });\n  const imageRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n\n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n\n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        setImageScale({\n          scaleX,\n          scaleY,\n          offsetX,\n          offsetY\n        });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Get book match for a spine region\n  const getBookForSpine = spineId => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Get spine region by ID\n  const getSpineRegion = spineId => {\n    return spineRegions.find(spine => spine.id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = spineId => {\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = spineId => {\n    setHoveredSpineId(spineId);\n  };\n\n  // Calculate spine region styles with proper scaling\n  const getSpineStyles = spine => {\n    const book = getBookForSpine(spine.id);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n    let baseClasses = 'spine-region';\n    if (isSelected) baseClasses += ' selected';\n    if (isHovered) baseClasses += ' hovered';\n    if (isOtherSelected) baseClasses += ' dimmed';\n\n    // Scale coordinates to match displayed image\n    const scaledX = spine.x * imageScale.scaleX + imageScale.offsetX;\n    const scaledY = spine.y * imageScale.scaleY + imageScale.offsetY;\n    const scaledWidth = spine.width * imageScale.scaleX;\n    const scaledHeight = spine.height * imageScale.scaleY;\n    const transform = `rotate(${spine.rotation}deg)`;\n\n    // Debug: Log book data\n    if (book) {\n      console.log(`Spine ${spine.id} book data:`, {\n        title: book.title,\n        author: book.author_name,\n        confidence: book.confidence,\n        spine_region_id: book.spine_region_id\n      });\n    }\n    return {\n      className: baseClasses,\n      style: {\n        left: `${scaledX}px`,\n        top: `${scaledY}px`,\n        width: `${scaledWidth}px`,\n        height: `${scaledHeight}px`,\n        transform,\n        zIndex: isSelected ? 10 : isHovered ? 5 : 1,\n        opacity: isOtherSelected ? 0.3 : 1\n      }\n    };\n  };\n\n  // Render spine region\n  const renderSpineRegion = spine => {\n    const book = getBookForSpine(spine.id);\n    const styles = getSpineStyles(spine);\n    const spineNumber = spineRegions.findIndex(s => s.id === spine.id) + 1;\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: styles.className,\n      style: styles.style,\n      onClick: () => handleSpineClick(spine.id),\n      onMouseEnter: () => handleSpineHover(spine.id),\n      onMouseLeave: () => handleSpineHover(null),\n      whileHover: {\n        scale: 1.02\n      },\n      whileTap: {\n        scale: 0.98\n      },\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spine-label\",\n        children: spineNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-6 left-0 text-xs text-gray-600\",\n        children: [Math.round(spine.confidence * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), hoveredSpineId === spine.id && book && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"absolute left-full top-0 ml-2 bg-gray-900 text-white text-sm px-3 py-2 rounded-lg shadow-lg whitespace-nowrap z-20 max-w-xs\",\n        initial: {\n          opacity: 0,\n          x: -5\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-300 text-xs\",\n          children: [\"by \", book.author_name.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), book.first_publish_year && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-300 text-xs\",\n          children: book.first_publish_year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-2 -left-2 w-0 h-0 border-r-4 border-l-0 border-t-2 border-b-2 border-transparent border-r-gray-900\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, spine.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-0 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Book Spine Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [spineRegions.length, \" spine\", spineRegions.length !== 1 ? 's' : '', \" detected\", bookMatches.length > 0 && ` â€¢ ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative bg-gray-100 min-h-[400px] flex items-center justify-center\",\n      children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: imageUrl,\n        alt: \"Book spines\",\n        className: \"max-w-full max-h-[600px] object-contain\",\n        onLoad: () => setImageLoaded(true),\n        onError: () => setImageLoaded(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0\",\n        children: spineRegions.map(renderSpineRegion)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), imageLoaded && spineRegions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-12 h-12 mx-auto mb-2 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"No book spines detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Try uploading a clearer image with better lighting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), spineRegions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-500 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Detected spine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs\",\n          children: \"Click on spine regions to select books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(SpineVisualizer, \"HRD1yhlSQ9orbRYD+jlCdJtZf80=\");\n_c = SpineVisualizer;\nexport default SpineVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SpineVisualizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","BookOpen","AlertCircle","jsxDEV","_jsxDEV","SpineVisualizer","imageUrl","spineRegions","bookMatches","selectedSpineId","onSpineSelected","isFinalized","_s","imageLoaded","setImageLoaded","hoveredSpineId","setHoveredSpineId","imageScale","setImageScale","scaleX","scaleY","offsetX","offsetY","imageRef","containerRef","current","img","container","containerRect","getBoundingClientRect","imgRect","width","naturalWidth","height","naturalHeight","left","top","getBookForSpine","spineId","find","book","spine_region_id","getSpineRegion","spine","id","handleSpineClick","handleSpineHover","getSpineStyles","isSelected","isHovered","hasSelection","isOtherSelected","baseClasses","scaledX","x","scaledY","y","scaledWidth","scaledHeight","transform","rotation","console","log","title","author","author_name","confidence","className","style","zIndex","opacity","renderSpineRegion","styles","spineNumber","findIndex","s","div","onClick","onMouseEnter","onMouseLeave","whileHover","scale","whileTap","initial","animate","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","join","first_publish_year","length","ref","src","alt","onLoad","onError","map","_c","$RefreshReg$"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/components/SpineVisualizer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BookOpen, AlertCircle } from 'lucide-react';\n\nimport { SpineRegion, BookMatch } from '../types';\n\ninterface SpineVisualizerProps {\n  imageUrl: string;\n  spineRegions: SpineRegion[];\n  bookMatches: BookMatch[];\n  selectedSpineId: string | null;\n  onSpineSelected: (spineId: string) => void;\n  isFinalized: boolean;\n}\n\nconst SpineVisualizer: React.FC<SpineVisualizerProps> = ({\n  imageUrl,\n  spineRegions,\n  bookMatches,\n  selectedSpineId,\n  onSpineSelected,\n  isFinalized\n}) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [hoveredSpineId, setHoveredSpineId] = useState<string | null>(null);\n  const [imageScale, setImageScale] = useState({ scaleX: 1, scaleY: 1, offsetX: 0, offsetY: 0 });\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Calculate image scale and offset when image loads\n  useEffect(() => {\n    if (imageRef.current && imageLoaded) {\n      const img = imageRef.current;\n      const container = containerRef.current;\n      \n      if (container) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n        \n        // Calculate scale factors\n        const scaleX = imgRect.width / img.naturalWidth;\n        const scaleY = imgRect.height / img.naturalHeight;\n        \n        // Calculate offset (difference between container and image positioning)\n        const offsetX = imgRect.left - containerRect.left;\n        const offsetY = imgRect.top - containerRect.top;\n        \n        setImageScale({ scaleX, scaleY, offsetX, offsetY });\n      }\n    }\n  }, [imageLoaded]);\n\n  // Get book match for a spine region\n  const getBookForSpine = (spineId: string): BookMatch | undefined => {\n    return bookMatches.find(book => book.spine_region_id === spineId);\n  };\n\n  // Get spine region by ID\n  const getSpineRegion = (spineId: string): SpineRegion | undefined => {\n    return spineRegions.find(spine => spine.id === spineId);\n  };\n\n  // Handle spine region click\n  const handleSpineClick = (spineId: string) => {\n    onSpineSelected(spineId);\n  };\n\n  // Handle spine region hover\n  const handleSpineHover = (spineId: string | null) => {\n    setHoveredSpineId(spineId);\n  };\n\n  // Calculate spine region styles with proper scaling\n  const getSpineStyles = (spine: SpineRegion) => {\n    const book = getBookForSpine(spine.id);\n    const isSelected = selectedSpineId === spine.id;\n    const isHovered = hoveredSpineId === spine.id;\n    const hasSelection = selectedSpineId !== null;\n    const isOtherSelected = hasSelection && !isSelected;\n\n    let baseClasses = 'spine-region';\n    if (isSelected) baseClasses += ' selected';\n    if (isHovered) baseClasses += ' hovered';\n    if (isOtherSelected) baseClasses += ' dimmed';\n\n    // Scale coordinates to match displayed image\n    const scaledX = spine.x * imageScale.scaleX + imageScale.offsetX;\n    const scaledY = spine.y * imageScale.scaleY + imageScale.offsetY;\n    const scaledWidth = spine.width * imageScale.scaleX;\n    const scaledHeight = spine.height * imageScale.scaleY;\n\n    const transform = `rotate(${spine.rotation}deg)`;\n\n    // Debug: Log book data\n    if (book) {\n      console.log(`Spine ${spine.id} book data:`, {\n        title: book.title,\n        author: book.author_name,\n        confidence: book.confidence,\n        spine_region_id: book.spine_region_id\n      });\n    }\n\n    return {\n      className: baseClasses,\n      style: {\n        left: `${scaledX}px`,\n        top: `${scaledY}px`,\n        width: `${scaledWidth}px`,\n        height: `${scaledHeight}px`,\n        transform,\n        zIndex: isSelected ? 10 : isHovered ? 5 : 1,\n        opacity: isOtherSelected ? 0.3 : 1\n      }\n    };\n  };\n\n  // Render spine region\n  const renderSpineRegion = (spine: SpineRegion) => {\n    const book = getBookForSpine(spine.id);\n    const styles = getSpineStyles(spine);\n    const spineNumber = spineRegions.findIndex(s => s.id === spine.id) + 1;\n\n    return (\n      <motion.div\n        key={spine.id}\n        className={styles.className}\n        style={styles.style}\n        onClick={() => handleSpineClick(spine.id)}\n        onMouseEnter={() => handleSpineHover(spine.id)}\n        onMouseLeave={() => handleSpineHover(null)}\n        whileHover={{ scale: 1.02 }}\n        whileTap={{ scale: 0.98 }}\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.2 }}\n      >\n        {/* Spine Number Label */}\n        <div className=\"spine-label\">\n          {spineNumber}\n        </div>\n\n        {/* Confidence Indicator */}\n        <div className=\"absolute -bottom-6 left-0 text-xs text-gray-600\">\n          {Math.round(spine.confidence * 100)}%\n        </div>\n\n        {/* Hover Tooltip */}\n        {hoveredSpineId === spine.id && book && (\n          <motion.div\n            className=\"absolute left-full top-0 ml-2 bg-gray-900 text-white text-sm px-3 py-2 rounded-lg shadow-lg whitespace-nowrap z-20 max-w-xs\"\n            initial={{ opacity: 0, x: -5 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.2 }}\n          >\n            <div className=\"font-medium\">{book.title}</div>\n            <div className=\"text-gray-300 text-xs\">\n              by {book.author_name.join(', ')}\n            </div>\n            {book.first_publish_year && (\n              <div className=\"text-gray-300 text-xs\">\n                {book.first_publish_year}\n              </div>\n            )}\n            <div className=\"absolute top-2 -left-2 w-0 h-0 border-r-4 border-l-0 border-t-2 border-b-2 border-transparent border-r-gray-900\"></div>\n          </motion.div>\n        )}\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"card p-0 overflow-hidden\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Book Spine Detection\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          {spineRegions.length} spine{spineRegions.length !== 1 ? 's' : ''} detected\n          {bookMatches.length > 0 && ` â€¢ ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`}\n        </p>\n      </div>\n\n      {/* Image Container */}\n      <div \n        ref={containerRef}\n        className=\"relative bg-gray-100 min-h-[400px] flex items-center justify-center\"\n      >\n        {!imageLoaded && (\n          <div className=\"text-center text-gray-500\">\n            <BookOpen className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n            <p>Loading image...</p>\n          </div>\n        )}\n\n        {/* Main Image */}\n        <img\n          ref={imageRef}\n          src={imageUrl}\n          alt=\"Book spines\"\n          className=\"max-w-full max-h-[600px] object-contain\"\n          onLoad={() => setImageLoaded(true)}\n          onError={() => setImageLoaded(false)}\n        />\n\n        {/* Spine Regions Overlay */}\n        {imageLoaded && (\n          <div className=\"absolute inset-0\">\n            {spineRegions.map(renderSpineRegion)}\n          </div>\n        )}\n\n        {/* No Spines Detected */}\n        {imageLoaded && spineRegions.length === 0 && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\">\n            <div className=\"text-center text-gray-500\">\n              <AlertCircle className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-lg font-medium\">No book spines detected</p>\n              <p className=\"text-sm\">Try uploading a clearer image with better lighting</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      {spineRegions.length > 0 && (\n        <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-500 rounded\"></div>\n                <span>Detected spine</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"></div>\n                <span>Selected</span>\n              </div>\n            </div>\n            \n            <div className=\"text-xs\">\n              Click on spine regions to select books\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SpineVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}