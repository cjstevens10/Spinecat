{"ast":null,"code":"import React,{useState,useRef}from'react';import{motion}from'framer-motion';import{BookOpen,AlertCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SpineVisualizer=_ref=>{let{imageUrl,spineRegions,bookMatches,selectedSpineId,onSpineSelected,isFinalized}=_ref;const[imageLoaded,setImageLoaded]=useState(false);const[hoveredSpineId,setHoveredSpineId]=useState(null);const imageRef=useRef(null);const containerRef=useRef(null);// Get book match for a spine region\nconst getBookForSpine=spineId=>{return bookMatches.find(book=>book.spine_region_id===spineId);};// Get spine region by ID\nconst getSpineRegion=spineId=>{return spineRegions.find(spine=>spine.id===spineId);};// Handle spine region click\nconst handleSpineClick=spineId=>{onSpineSelected(spineId);};// Handle spine region hover\nconst handleSpineHover=spineId=>{setHoveredSpineId(spineId);};// Calculate spine region styles\nconst getSpineStyles=spine=>{const book=getBookForSpine(spine.id);const isSelected=selectedSpineId===spine.id;const isHovered=hoveredSpineId===spine.id;let baseClasses='spine-region';if(isSelected)baseClasses+=' selected';if(isHovered)baseClasses+=' hovered';const transform=\"rotate(\".concat(spine.rotation,\"deg)\");return{className:baseClasses,style:{left:\"\".concat(spine.x,\"px\"),top:\"\".concat(spine.y,\"px\"),width:\"\".concat(spine.width,\"px\"),height:\"\".concat(spine.height,\"px\"),transform,zIndex:isSelected?10:isHovered?5:1}};};// Render spine region\nconst renderSpineRegion=spine=>{const book=getBookForSpine(spine.id);const styles=getSpineStyles(spine);const spineNumber=spineRegions.findIndex(s=>s.id===spine.id)+1;return/*#__PURE__*/_jsxs(motion.div,{className:styles.className,style:styles.style,onClick:()=>handleSpineClick(spine.id),onMouseEnter:()=>handleSpineHover(spine.id),onMouseLeave:()=>handleSpineHover(null),whileHover:{scale:1.02},whileTap:{scale:0.98},initial:{opacity:0,scale:0.8},animate:{opacity:1,scale:1},transition:{duration:0.2},children:[/*#__PURE__*/_jsx(\"div\",{className:\"spine-label\",children:spineNumber}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute -bottom-6 left-0 text-xs text-gray-600\",children:[Math.round(spine.confidence*100),\"%\"]}),isHovered&&book&&/*#__PURE__*/_jsxs(motion.div,{className:\"absolute -top-16 left-0 bg-gray-900 text-white text-sm px-3 py-2 rounded-lg shadow-lg whitespace-nowrap z-20\",initial:{opacity:0,y:5},animate:{opacity:1,y:0},transition:{duration:0.2},children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:book.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 text-xs\",children:[\"by \",book.author_name.join(', ')]}),book.first_publish_year&&/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-300 text-xs\",children:book.first_publish_year}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-full left-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"})]})]},spine.id);};return/*#__PURE__*/_jsxs(\"div\",{className:\"card p-0 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Book Spine Detection\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[spineRegions.length,\" spine\",spineRegions.length!==1?'s':'',\" detected\",bookMatches.length>0&&\" \\u2022 \".concat(bookMatches.length,\" book\").concat(bookMatches.length!==1?'s':'',\" identified\")]})]}),/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,className:\"relative bg-gray-100 min-h-[400px] flex items-center justify-center\",children:[!imageLoaded&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-500\",children:[/*#__PURE__*/_jsx(BookOpen,{className:\"w-12 h-12 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading image...\"})]}),/*#__PURE__*/_jsx(\"img\",{ref:imageRef,src:imageUrl,alt:\"Book spines\",className:\"max-w-full max-h-[600px] object-contain\",onLoad:()=>setImageLoaded(true),onError:()=>setImageLoaded(false)}),imageLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 pointer-events-none\",children:spineRegions.map(renderSpineRegion)}),imageLoaded&&spineRegions.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-500\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-12 h-12 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-medium\",children:\"No book spines detected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Try uploading a clearer image with better lighting\"})]})})]}),spineRegions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-gray-50 border-t border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-sm text-gray-600\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-primary-500 rounded\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Detected spine\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Selected\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs\",children:\"Click on spine regions to select books\"})]})})]});};export default SpineVisualizer;","map":{"version":3,"names":["React","useState","useRef","motion","BookOpen","AlertCircle","jsx","_jsx","jsxs","_jsxs","SpineVisualizer","_ref","imageUrl","spineRegions","bookMatches","selectedSpineId","onSpineSelected","isFinalized","imageLoaded","setImageLoaded","hoveredSpineId","setHoveredSpineId","imageRef","containerRef","getBookForSpine","spineId","find","book","spine_region_id","getSpineRegion","spine","id","handleSpineClick","handleSpineHover","getSpineStyles","isSelected","isHovered","baseClasses","transform","concat","rotation","className","style","left","x","top","y","width","height","zIndex","renderSpineRegion","styles","spineNumber","findIndex","s","div","onClick","onMouseEnter","onMouseLeave","whileHover","scale","whileTap","initial","opacity","animate","transition","duration","children","Math","round","confidence","title","author_name","join","first_publish_year","length","ref","src","alt","onLoad","onError","map"],"sources":["C:/Users/coope/CursorWorkspace/Spinecat/web_interface/src/components/SpineVisualizer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { BookOpen, AlertCircle } from 'lucide-react';\r\n\r\nimport { SpineRegion, BookMatch } from '../types';\r\n\r\ninterface SpineVisualizerProps {\r\n  imageUrl: string;\r\n  spineRegions: SpineRegion[];\r\n  bookMatches: BookMatch[];\r\n  selectedSpineId: string | null;\r\n  onSpineSelected: (spineId: string) => void;\r\n  isFinalized: boolean;\r\n}\r\n\r\nconst SpineVisualizer: React.FC<SpineVisualizerProps> = ({\r\n  imageUrl,\r\n  spineRegions,\r\n  bookMatches,\r\n  selectedSpineId,\r\n  onSpineSelected,\r\n  isFinalized\r\n}) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [hoveredSpineId, setHoveredSpineId] = useState<string | null>(null);\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get book match for a spine region\r\n  const getBookForSpine = (spineId: string): BookMatch | undefined => {\r\n    return bookMatches.find(book => book.spine_region_id === spineId);\r\n  };\r\n\r\n  // Get spine region by ID\r\n  const getSpineRegion = (spineId: string): SpineRegion | undefined => {\r\n    return spineRegions.find(spine => spine.id === spineId);\r\n  };\r\n\r\n  // Handle spine region click\r\n  const handleSpineClick = (spineId: string) => {\r\n    onSpineSelected(spineId);\r\n  };\r\n\r\n  // Handle spine region hover\r\n  const handleSpineHover = (spineId: string | null) => {\r\n    setHoveredSpineId(spineId);\r\n  };\r\n\r\n  // Calculate spine region styles\r\n  const getSpineStyles = (spine: SpineRegion) => {\r\n    const book = getBookForSpine(spine.id);\r\n    const isSelected = selectedSpineId === spine.id;\r\n    const isHovered = hoveredSpineId === spine.id;\r\n\r\n    let baseClasses = 'spine-region';\r\n    if (isSelected) baseClasses += ' selected';\r\n    if (isHovered) baseClasses += ' hovered';\r\n\r\n    const transform = `rotate(${spine.rotation}deg)`;\r\n\r\n    return {\r\n      className: baseClasses,\r\n      style: {\r\n        left: `${spine.x}px`,\r\n        top: `${spine.y}px`,\r\n        width: `${spine.width}px`,\r\n        height: `${spine.height}px`,\r\n        transform,\r\n        zIndex: isSelected ? 10 : isHovered ? 5 : 1\r\n      }\r\n    };\r\n  };\r\n\r\n  // Render spine region\r\n  const renderSpineRegion = (spine: SpineRegion) => {\r\n    const book = getBookForSpine(spine.id);\r\n    const styles = getSpineStyles(spine);\r\n    const spineNumber = spineRegions.findIndex(s => s.id === spine.id) + 1;\r\n\r\n    return (\r\n      <motion.div\r\n        key={spine.id}\r\n        className={styles.className}\r\n        style={styles.style}\r\n        onClick={() => handleSpineClick(spine.id)}\r\n        onMouseEnter={() => handleSpineHover(spine.id)}\r\n        onMouseLeave={() => handleSpineHover(null)}\r\n        whileHover={{ scale: 1.02 }}\r\n        whileTap={{ scale: 0.98 }}\r\n        initial={{ opacity: 0, scale: 0.8 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.2 }}\r\n      >\r\n        {/* Spine Number Label */}\r\n        <div className=\"spine-label\">\r\n          {spineNumber}\r\n        </div>\r\n\r\n        {/* Confidence Indicator */}\r\n        <div className=\"absolute -bottom-6 left-0 text-xs text-gray-600\">\r\n          {Math.round(spine.confidence * 100)}%\r\n        </div>\r\n\r\n        {/* Hover Tooltip */}\r\n        {isHovered && book && (\r\n          <motion.div\r\n            className=\"absolute -top-16 left-0 bg-gray-900 text-white text-sm px-3 py-2 rounded-lg shadow-lg whitespace-nowrap z-20\"\r\n            initial={{ opacity: 0, y: 5 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.2 }}\r\n          >\r\n            <div className=\"font-medium\">{book.title}</div>\r\n            <div className=\"text-gray-300 text-xs\">\r\n              by {book.author_name.join(', ')}\r\n            </div>\r\n            {book.first_publish_year && (\r\n              <div className=\"text-gray-300 text-xs\">\r\n                {book.first_publish_year}\r\n              </div>\r\n            )}\r\n            <div className=\"absolute top-full left-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\r\n          </motion.div>\r\n        )}\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card p-0 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"p-6 border-b border-gray-200\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n          Book Spine Detection\r\n        </h3>\r\n        <p className=\"text-sm text-gray-600\">\r\n          {spineRegions.length} spine{spineRegions.length !== 1 ? 's' : ''} detected\r\n          {bookMatches.length > 0 && ` • ${bookMatches.length} book${bookMatches.length !== 1 ? 's' : ''} identified`}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Image Container */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative bg-gray-100 min-h-[400px] flex items-center justify-center\"\r\n      >\r\n        {!imageLoaded && (\r\n          <div className=\"text-center text-gray-500\">\r\n            <BookOpen className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\r\n            <p>Loading image...</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Image */}\r\n        <img\r\n          ref={imageRef}\r\n          src={imageUrl}\r\n          alt=\"Book spines\"\r\n          className=\"max-w-full max-h-[600px] object-contain\"\r\n          onLoad={() => setImageLoaded(true)}\r\n          onError={() => setImageLoaded(false)}\r\n        />\r\n\r\n        {/* Spine Regions Overlay */}\r\n        {imageLoaded && (\r\n          <div className=\"absolute inset-0 pointer-events-none\">\r\n            {spineRegions.map(renderSpineRegion)}\r\n          </div>\r\n        )}\r\n\r\n        {/* No Spines Detected */}\r\n        {imageLoaded && spineRegions.length === 0 && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90\">\r\n            <div className=\"text-center text-gray-500\">\r\n              <AlertCircle className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" />\r\n              <p className=\"text-lg font-medium\">No book spines detected</p>\r\n              <p className=\"text-sm\">Try uploading a clearer image with better lighting</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      {spineRegions.length > 0 && (\r\n        <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\r\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-3 h-3 bg-primary-500 rounded\"></div>\r\n                <span>Detected spine</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-3 h-3 bg-primary-600 rounded ring-2 ring-primary-400\"></div>\r\n                <span>Selected</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"text-xs\">\r\n              Click on spine regions to select books\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpineVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}